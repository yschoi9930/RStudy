a<-sum(is.na(carData::chile[,1]);a
a<-sum(is.na(carData::chile[,1]); a
a<-sum(is.na(carData::chile[,1]));a
a<-sum(is.na(carData::Chile[,1]));a
ncol(carData::Chile)
or (i in 1:ncol(carData::Chile)){
cat(colnames(carData::Chile)[,i], ":" , sum(is.na(carData::Chile[,i])))
}
for (i in 1:ncol(carData::Chile)){
cat(colnames(carData::Chile)[,i], ":" , sum(is.na(carData::Chile[,i])))
}
for (i in 1:ncol(carData::Chile)){
cat(colnames(carData::Chile)[,i], ":" , sum(is.na(carData::Chile[,i])))
}
colnames(carData::Chile)[,1]
colnames(carData::Chile)[1]
colnames(carData::Chile)
for (i in 1:ncol(carData::Chile)){
cat(colnames(carData::Chile)[i], ":" , sum(is.na(carData::Chile[,i])))
}
cat(colnames(carData::Chile)[i], ":" , sum(is.na(carData::Chile[,i])),"\n")
}
for (i in 1:ncol(carData::Chile)){
cat(colnames(carData::Chile)[i], ":" , sum(is.na(carData::Chile[,i])),"\n")
}
tmp<-airquality
is.na(tmp)
tmp(is.na(tmp))<-NA
p<-airquality
tmp(is.na(tmp))<-NA
is.na(tmp[,Ozone]
is.na(tmp$Ozone)
is.na(tmp$Ozone)
tmp[is.na(tmp$Ozone),Ozone]<-0
tmp[is.na(tmp$Ozone),'Ozone']<-0
str(mtcars)
aggregate(mtcars, by=list(cyl,gear), FUN=mean)
aggregate(mtcars, by=list(mtcars$cyl,mtcars$gear), FUN=mean)
head(mtcars)
levels(mtcars$cyl)
tor(mtcars$cyl)
levels(a)
a<-as.factor(mtcars$cyl)
levels(a)
str(ggplot2::diamonds)
str(ggplot2::diamonds)
aggregate(ggplot2::diamonds, by=list(diamonds2$cut,diamonds2$color), FUN=mean)
aggregate(price ~ cut, diamonds2, mean)
aggregate(price ~ cut, diamonds2, mean)
aggregate(price ~ cut, diamonds2, mean)
library(ggplot2)
aggregate(price ~ cut, diamonds2, mean)
aggregate(price ~ cut, diamonds, mean)
airquality[,'Month','Day','Solar.R']
head(airquality)
?order
airquality[order(airquality$Solar.R, decreasing=True),]
airquality[order(airquality$Solar.R, decreasing=T),]
order(airquality$Solar.R, decreasing=T)
airquality[,'Month','Day']
airquality[,c('Month','Day','Solar.R')]
airquality[order(airquality$Solar.R, decreasing = T),c('Month','Day','Solar.R')]
head(airquality[order(airquality$Solar.R, decreasing = T),c('Month','Day','Solar.R')])
tail(airquality[order(airquality$Solar.R, decreasing = T),c('Month','Day','Solar.R')],n=10)
b<-airquality[,c('Month','Day','Solar.R')]
c<-b[order(b$Solar.R, decreasing = T),]
tail(c,n=10)
head(carData)
library(carData)
head(carData)
head(CES11)
table(CES11$absortion)
table(CES11$absortion)
table(CES11$absortion)/nrow(CES11$absortion)
table(CES11$absortion)
data('CES11')
table(CES11$absortion)
str(CES11)
CES11$absortion<-as.vector(CES11$absortion)
table(CES11$absortion)
str(CES11)
as.vector(CES11$absortion)
CES11<-as.vector(CES11$absortion)
table(CES11$absortion)
dist<- cars[,2]
dist
head(cars)
boxplot(dist, main='자동차 제동거리리')
boxplot(dist, ㅜ믇ㄴㄴ='자동차 제동거리')
boxplot(dist, names='자동차 제동거리')
boxplot(dist, names=c('자동차 제동거리'))
boxplot(dist, '자동차 제동거리')
boxplot(dist, main ='자동차 제동거리')
points(mean(dist))
points(mean(dist), pch=3)
points(mean(dist), pch=3,col='red')
points(mean(dist), pch=3,col='red'.cex=2)
points(mean(dist), pch=3,col='red', cex=2)
boxplot(Petal.Length~Species, data=iris)
boxplot(Petal.Length~Species, data=iris, main ="품종별 꽃잎의 길이", col=c("green",'red','blue'))
boxplot(state.x77$Population, state.region$Population)
head(state.x77$Population)
library(state.x77)
boxplot(mtcars$mpg)
boxplot(mpg ~ gear, data=mtcars)
boxplot(mpg ~ vs, data=mtcars)
boxplot(mpg ~ vs, data=mtcars, xlab='Cylinder')
boxplot(mpg ~ vs, data=mtcars, notch=T)
head(mtcaars)
head(mtcars)
mean(wt)
mean(mtcars$wt)
mean(mtcars$wt); option(digit=2)
f <- factor(mtcars$cyl,levels=c(4,6,8),
labels=c('4','6','8'))
head(mtcars
mtcars$cyl.f <- factor(mtcars$cyl,levels=c(4,6,8),
labels=c('4','6','8'))
head(mtcars)
mtcars$cyl.f <- factor(mtcars$cyl,levels=c(4,6,8),
labels=c('4','6','8'))
head(mtcars)
boxplot(Petal.Length~Species, data=iris, main ="품종별 꽃잎의 길이", col=c("green",'red','blue'))
for(i in nrow(mtcars)){
if(mtcars$wt[,i]>=mean(wt)){
mtcars$wrlevel[,i]=='High'
} else(mtcars$wt[,i]<mean(wt)) {
mtcars$wrlevel[,i]=='Low'
}
}
for(i in nrow(mtcars)){
if(mtcars$wt[,i]>=mean(wt)){
mtcars$wrlevel[,i]=='High'
} else(mtcars$wt[,i]<mean(wt)) {
mtcars$wrlevel[,i]=='Low'
}
}
mtcars$wrlevel[,i]<-'High'
?rep
if(mtcars$wt[,i]>=mean(mtcars$wt)){
mtcars$wrlevel[,i]<-'High'
} else(mtcars$wt[,i]<mean(mtcars$wt)) {
mtcars$wrlevel[,i]<-'Low'
}
for(i in nrow(mtcars)){
if(mtcars$wt[,i]>=mean(mtcars$wt)){
mtcars$wrlevel[,i]<-'High'
} else(mtcars$wt[,i]<mean(mtcars$wt)) {
mtcars$wrlevel[,i]<-'Low'
}
}
for(i in nrow(mtcars)){
if(mtcars$wt[,i] >= mean(mtcars$wt)){
mtcars$wtlevel[,i]<-'High'
} else(mtcars$wt[,i] < mean(mtcars$wt)) {
mtcars$wtlevel[,i]<-'Low'
}
}
for(i in nrow(mtcars)){
if(mtcars$wt[i] >= mean(mtcars$wt)){
mtcars$wtlevel[i]<-'High'
} else(mtcars$wt[i] < mean(mtcars$wt)) {
mtcars$wtlevel[i]<-'Low'
}
for(i in nrow(mtcars)){
if(mtcars$wt[i] >= mean(mtcars$wt)){
mtcars$wtlevel[i]<-'High'
} else {
mtcars$wtlevel[i]<-'Low'
}
}
head(mtcars)
mtcars$wt[2]
str(mtcars)
mtcars$wt[2]
mean(mtcars$wt)
mtcars$wtlevel[1]<-'High'
head(mtcars)
for(i in nrow(mtcars)){
if(mtcars$wt[i] >= mean(mtcars$wt)){
mtcars$wtlevel[i]<-'High'
} else {
mtcars$wtlevel[i]<-'Low'
}
}
head(mtcars)
mtcars$wtlevel[1]<-'Low'
head(mtcars)
wtlevel[mtcars$wt>= mean(mtcars$wt)]<- "High"
mtcars$wtlevel[mtcars$wt>= mean(mtcars$wt)]<- "High"
head(mtcars)
mtcars$wtlevel[mtcars$wt< mean(mtcars$wt)]<- "Low"
head(mtcars)
mtcars$wtlevel2[mtcars$wt>= mean(mtcars$wt)]<- "High"
mtcars$wtlevel2[mtcars$wt< mean(mtcars$wt)]<- "Low"
head(mtcars)
mtcars<-subset(mtcars, select="wtlevel2")
head(mtcars)
str(mtcars)
mtcars<-subset(mtcars, select=-"wtlevel2")
head(mtcars)
mtcars<-subset(mtcars, select=-wtlevel2)
head(mtcars)
head(cars)
dist<-cars[,2]
dist
hist(dist, main ="Histogram for dist", xlap='dist', ylab='freq',
border='blue', col='green')
hist(dist, main ="Histogram for dist", xlap='dist', ylab='freq',
border='blue', col='green',las=2)
hist(dist, main ="Histogram for dist", xlap='dist', ylab='freq',
border='blue', col='green',las=5)
hist(dist, main ="Histogram for dist", xlap='dist', ylab='freq',
border='blue', col='green',las=2)
hist(dist, main ="Histogram for dist", xlap='dist', ylab='freq',
border='blue', col='green',las=2, breaks=5)
hist(dist, main ="Histogram for dist", xlap='dist', ylab='freq',
border='blue', col='green',las=2)
hist(dist, main ="Histogram for dist", xlab='dist', ylab='freq',
border='blue', col='green',las=2)
hist(dist, main ="Histogram for dist", xlab='dist', ylab='freq',
border='blue', col='red',las=2)
hist(dist, main ="Histogram for dist", xlab='dist', ylab='freq',
border='blue', col='green',las=2)
hist(dist, main ="Histogram for dist", xlab='dist', ylab='freq',
border='blue', col='green',las=2, breaks=5)
hist(dist, main ="Histogram for dist", xlab='dist', ylab='freq',
border='blue', col='green',las=2, breaks=4)
hist(dist, main ="Histogram for dist", xlab='dist', ylab='freq',
border='blue', col='green',las=2, breaks=5)
table(diamonds)
table(diamonds$color)
class(diamonds$color)
cut.Freq<-table(diamonds$color)
addmargins(cut.Freq)
addmargins(cars)
addmargins(cars$dist)
head(mtcars)
df<-data.frame(x=c('A','B','A','B'), y=c('1','2','2','1', num =c(3,5,7,10)))
df
df<-data.frame(x=c('A','B','A','B'), y=c('1','2','2','1'), num =c(3,5,7,10))
df
xtabs(num ~ x+y, data=df)
xtabs( ~ x+y, data=df)
hist(trees)
trees
hist(trees$Girth, border='red', col='orange')
hist(trees$Girth, border='red', col='orange', breaks=5)
hist(trees$Girth, border='red', col='orange', breaks=4)
bs<-read(businessTrip.csv); bs
bs<-read.csv(businessTrip.csv); bs
bs<-read.csv('businessTrip.csv'); bs
str(bs)
bs$cost<-as.numeric(bs$cost)
str(bs)
bs<-read.csv('businessTrip.csv'); bs
barplot(table(diamonds$cut))
barplot(table(diamonds$cut), horiz =T)
barplot(diamonds$cut, horiz =T)
barplot(diamonds$cut)
barplot(diamonds$cut ~ diamonds$color)
barplot(table(diamonds$cut ~ diamonds$color)
barplot(table(diamonds$cut ~ diamonds$color))
barplot(table(diamonds$cut, diamonds$color))
table(diamonds$cut, diamonds$color)
barplot(cnt, col = c('red','orange','yellow','green','blue'))
cnt<-table(diamonds$cut, diamonds$color)
barplot(cnt, col = c('red','orange','yellow','green','blue'))
barplot(cnt, col = c('red','orange','yellow','green','blue'),legend=T)
barplot(cnt, col = c('red','orange','yellow','green','blue'),legend=T, beside=T)
barplot(cnt, col = rainbow(5),legend=T, beside=T)
barplot(cnt, col = rainbow(5),legend=T, beside=T)
par(mfrow=c(1,2))
barplot(cnt, col = rainbow(5),legend=T, beside=T)
))
barplot(cnt, co
par(mfrow=c(1,1))
barplot(cnt, col = rainbow(5),legend=T, beside=T)
par(mfrow=c(1,1))
barplot(cnt, col = rainbow(5),legend=T, beside=T)
pie(table(diamonds$cut))
pie(table(diamonds$cut), radius = 1)
pie(table(diamonds$cut), radius = 1, clockwise=T)
pie(table(diamonds$cut), main = 'Quality', col=rainbow(5) radius = 1, clockwise=T)
pie(table(diamonds$cut), main = 'Quality', col=rainbow(5), radius = 1, clockwise=T)
frq<-table(diamonds$cut)
feq<-table(diamonds$cut)
feq<-table(diamonds$cut)
feq
names(feq)
paste(names(feq), feq, sep= ' ')
paste(names(feq), feq, sep= '\n ')
lbl<-paste(names(feq), feq, sep= '\n')
pie(table(diamonds$cut), labels=lbl main = 'Quality', col=rainbow(5), radius = 1, clockwise=T,
)
pie(table(diamonds$cut), labels=lbl, main = 'Quality', col=rainbow(5), radius = 1, clockwise=T,
)
pie(table(diamonds$cut), labels=lbl, main = 'Quality', col=rainbow(5), radius = 0.7, clockwise=T,
)
pie(table(diamonds$cut), labels=lbl, main = 'Quality', col=rainbow(5), radius = 1, clockwise=T,
)
?pie
install.packages('pie3d')
library('pie3d')
library(pie3d)
install.packages('pie3D')
install.packages('plotrix')
library(pie3d)
library(plotrix)
pie3d(feq, labels=lbl)
pie3D(feq, labels=lbl)
pie3D(feq, labels=lbl, explode = 0.05)
fan.plot(feq)
fan.plot(feq, labels= lbl)
head(mtcars)
month=1:12
late=c(5,8,7,9,4,6,12,13,8,6,6,4)
plot(1:10, late)
plot(1:12, late)
plot(1:12, late, type=1)
plot(1:12, late, type=2)
?plot
plot(1:12, late, type='1')
plot(1:12, late, type='l')
plot(1:12, late, type='l',lty=2)
plot(iris)
plot(iris[,1:4])
plot(iris)
plot(iris[,1:4])
pairs(iris[,1:4])
mosaicplot(~ Sex + Survived, data =Titanic)
mosaicplot(~ Sex + Survived + Class, data =Titanic)
data(mtcars)
str(mtcars)
str(bs)
table(bs$purpose)
table(bs$department)
table(bs$area)
table(bs$day)
table(bs$cost)
table(bs)
table(bs$purpose)
table(bs$department)
table(bs$area)
table(bs$cost)
table(bs$day)
H&A<-comma(c(54659,61028,53307,46161,54180), format='d')
install.packages('formattable')
library(formattable)
H&A<-comma(c(54659,61028,53307,46161,54180), format='d')
HnA<-comma(c(54659,61028,53307,46161,54180), format='d')
HnA
str(HnA)
HnA<-comma(c(54659,61028,53307,46161,54180), format='d')
HE<-comma(c(31215,29863,32098,39684,29707), format='d')
MC<-comma(c(15107,16133,15222,13208,9986), format='d')
VS<-comma(c(13470,14231,13401,13552,13193), format='d')
BS<-comma(c(16513,14947,15112,14392,17091), format='d')
LAB<-rbind(HnA,HE,MC,VS,BS)
:AB
head(LAB)
LAB<-rbind(HnA,HE,MC,VS,BS, colnames("19년 1Q","19년 2Q","19년 3Q","19년 4Q","20년 1Q"))
LAB<-rbind(HnA,HE,MC,VS,BS, colnames=c("19년 1Q","19년 2Q","19년 3Q","19년 4Q","20년 1Q"))
head(LAB)
LAB<-rbind(HnA,HE,MC,VS,BS)
colnames(LAB)<-=c("19년 1Q","19년 2Q","19년 3Q","19년 4Q","20년 1Q")
colnames(LAB)<-c("19년 1Q","19년 2Q","19년 3Q","19년 4Q","20년 1Q")
head(LAB)
bs
gsub(bs$cost)
gsub(",",""bs$cost)
gsub(",","",bs$cost)
bs$cost<-as.numeric(gsub(",","",bs$cost))
head(bs)
pied(bs$area)
pie(bs$area)
pie(table(bs$area))
pie(table(bs$area), main = "지역")
barplot(table(bs$department), main ="부서명명")
boxplot(Petal.Length~Species, data=iris, main ="품종별 꽃잎의 길이", col=c("green",'red','blue'))
boxplot(mpg ~ , data=mtcars, notch=T)
boxplot(mpg ~ , data=mtcars, notch=T)
hist(dist, main ="Histogram for dist", xlab='dist', ylab='freq',
border='blue', col='green',las=2, breaks=5)
tabls(bs$department,bs$area)
table(bs$department,bs$area)
barplot(table(a), main ="부서명명")
barplot(table(bs$department), main ="부서명")
a<-table(bs$department,bs$area)
a<-table(bs$department,bs$area);a
barplot(a, main ="부서명")
barplot(a, main ="부서명", legend=T)
barplot(a, main ="부서명", legend=T, col=rainbow(6))
barplot(a, main ="부서명", legend=T, beside=T)
barplot(a, main ="부서명", legend=T)
barplot(a, main ="지역별 부서서", legend=T)
barplot(a, main ="지역별 부서", legend=T)
boxplt(bs$cost)
boxplot(bs$cost)
barplot(bs$day)
barplot(table(bs$day))
barplot(table(bs$day), main="day")
barplot(table(bs$day), main="day")
b<-table(bs$department, bs$purpose)
b<-table(bs$department, bs$purpose); b
head(bs)
b<-table(bs$department, bs$purpose); b
scatterplot(b)
plot(b)
bs[,4]
aggregate(bs[,6], by=list(bs$purpose), FUN=mean)
head(LAB)
barplot(LAB)
barplot(LAB, main="사업부문별 매출액액")
barplot(LAB, main="사업부문별 매출액")
barplot(LAB, main="사업부문별 매출액", col=c(#003f5c, #58508d, #bc5090, #ff6361, #ffa600))
barplot(LAB, main="사업부문별 매출액", col=c('#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'))
barplot(LAB, main="사업부문별 매출액", color=c('#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'))
barplot(LAB, main="사업부문별 매출액", color=c('#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'))
barplot(LAB, main="사업부문별 매출액", col=c('#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'))
?barplot
barplot(LAB, main="사업부문별 매출액",
col=c('#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'),
horiz=T)
?barplot
barplot(LAB, main="사업부문별 매출액",
col=c('#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'),
horiz=T, las=1)
barplot(LAB, main="사업부문별 매출액",
col=c('#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'),
horiz=T, las=2,)
barplot(LAB, main="사업부문별 매출액",
col=c('#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'),
horiz=T, las=1,)
barplot(LAB, main="사업부문별 매출액",
col=c('#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'),
horiz=T, las=2,)
barplot(LAB, main="사업부문별 매출액",
col=c('#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'),
horiz=T, las=1,)
barplot(LAB, main="사업부문별 매출액",
col=c('#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'),
horiz=T, las=1, beside=T, xtabs="억 원원")
?barplot
barplot(LAB, main="사업부문별 매출액",
col=c('#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'),
horiz=T, las=1, beside=T, xlab="억 원원")
barplot(LAB, main="사업부문별 매출액",
col=c('#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'),
horiz=T, las=1, beside=T, xlab="억 원")
barplot(LAB, main="사업부문별 매출액",
col=c('#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'),
horiz=T, las=1, beside=T, xlab="억 원", legend=T)
?barplot
barplot(LAB, main="사업부문별 매출액",
col=c('#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'),
horiz=T, las=1, beside=T, xlab="억 원", legend=T,
args.lengend= list(x='topright', bty='o', inset=c(-0.25,0)))
barplot(LAB, main="사업부문별 매출액",
col=c('#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'),
horiz=T, las=1, beside=T, xlab="억 원", legend=T,
args.lengend=list(x='topright', bty='o', inset=c(-0.25,0)))
barplot(LAB, main="사업부문별 매출액",
col=c('#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'),
horiz=T, las=1, beside=T, xlab="억 원", legend=T,
args.legend=list(x='topright', bty='o', inset=c(-0.25,0)))
barplot(LAB, main="사업부문별 매출액",
col=c('#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'),
horiz=T, las=1, beside=T, xlab="억 원", legend=T,
args.legend=list(x='topright', bty='o', inset=c(-0.25,0)))
data("diamonds")
ds<-diamonds$PricePerCt
head(diamonds)
head(Diamonds)
data(Diamonds)
library(Stat2Data)
install.packages(Stat2Data)
install.packages('Stat2Data')
library(Stat2Data)
data(Diamonds)
head(Diamonds)
ds<-diamonds$PricePerCt
ds<-Diamonds$PricePerCt
hist(ds)
hist(dsm, breaks=9)
hist(ds, breaks=9)
hist(ds, breaks=9, main="캐럿당 가격 분포포")
hist(ds, breaks=9, main="캐럿당 가격 분포",
las=2)
hist(ds, breaks=9, main="캐럿당 가격 분포",
las=2, xlab='캐럿당 가격($)', ylab='빈도수수')
hist(ds, breaks=9, main="캐럿당 가격 분포",
las=2, xlab='캐럿당 가격($)', ylab='빈도')
par(mfrow=c(1,1), mar =c(5,4,4,2)+.1)
hist(ds, breaks=9, main="캐럿당 가격 분포",
las=2, xlab='캐럿당 가격($)', ylab='빈도')
hist(ds, breaks=9, main="캐럿당 가격 분포",
las=2, xlab='캐럿당 가격($)', ylab='빈도',
border = '#457b9d')
color<-rep('#1d3557',9)
color
color[3]<-'#a8dadc'
hist(ds, breaks=9, main="캐럿당 가격 분포",
las=2, xlab='캐럿당 가격($)', ylab='빈도',
border = '#457b9d', col=color ))
color[3]<-'#a8dadc'; color
hist(ds, breaks=9, main="캐럿당 가격 분포",
las=2, xlab='캐럿당 가격($)', ylab='빈도',
border = '#457b9d', col=color))
hist(ds, breaks=9, main="캐럿당 가격 분포",
las=2, xlab='캐럿당 가격($)', ylab='빈도',
border = '#457b9d', col=color)
