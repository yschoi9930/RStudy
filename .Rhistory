addmargins(cars)
addmargins(cars$dist)
head(mtcars)
df<-data.frame(x=c('A','B','A','B'), y=c('1','2','2','1', num =c(3,5,7,10)))
df
df<-data.frame(x=c('A','B','A','B'), y=c('1','2','2','1'), num =c(3,5,7,10))
df
xtabs(num ~ x+y, data=df)
xtabs( ~ x+y, data=df)
hist(trees)
trees
hist(trees$Girth, border='red', col='orange')
hist(trees$Girth, border='red', col='orange', breaks=5)
hist(trees$Girth, border='red', col='orange', breaks=4)
bs<-read(businessTrip.csv); bs
bs<-read.csv(businessTrip.csv); bs
bs<-read.csv('businessTrip.csv'); bs
str(bs)
bs$cost<-as.numeric(bs$cost)
str(bs)
bs<-read.csv('businessTrip.csv'); bs
barplot(table(diamonds$cut))
barplot(table(diamonds$cut), horiz =T)
barplot(diamonds$cut, horiz =T)
barplot(diamonds$cut)
barplot(diamonds$cut ~ diamonds$color)
barplot(table(diamonds$cut ~ diamonds$color)
barplot(table(diamonds$cut ~ diamonds$color))
barplot(table(diamonds$cut, diamonds$color))
table(diamonds$cut, diamonds$color)
barplot(cnt, col = c('red','orange','yellow','green','blue'))
cnt<-table(diamonds$cut, diamonds$color)
barplot(cnt, col = c('red','orange','yellow','green','blue'))
barplot(cnt, col = c('red','orange','yellow','green','blue'),legend=T)
barplot(cnt, col = c('red','orange','yellow','green','blue'),legend=T, beside=T)
barplot(cnt, col = rainbow(5),legend=T, beside=T)
barplot(cnt, col = rainbow(5),legend=T, beside=T)
par(mfrow=c(1,2))
barplot(cnt, col = rainbow(5),legend=T, beside=T)
))
barplot(cnt, co
par(mfrow=c(1,1))
barplot(cnt, col = rainbow(5),legend=T, beside=T)
par(mfrow=c(1,1))
barplot(cnt, col = rainbow(5),legend=T, beside=T)
pie(table(diamonds$cut))
pie(table(diamonds$cut), radius = 1)
pie(table(diamonds$cut), radius = 1, clockwise=T)
pie(table(diamonds$cut), main = 'Quality', col=rainbow(5) radius = 1, clockwise=T)
pie(table(diamonds$cut), main = 'Quality', col=rainbow(5), radius = 1, clockwise=T)
frq<-table(diamonds$cut)
feq<-table(diamonds$cut)
feq<-table(diamonds$cut)
feq
names(feq)
paste(names(feq), feq, sep= ' ')
paste(names(feq), feq, sep= '\n ')
lbl<-paste(names(feq), feq, sep= '\n')
pie(table(diamonds$cut), labels=lbl main = 'Quality', col=rainbow(5), radius = 1, clockwise=T,
)
pie(table(diamonds$cut), labels=lbl, main = 'Quality', col=rainbow(5), radius = 1, clockwise=T,
)
pie(table(diamonds$cut), labels=lbl, main = 'Quality', col=rainbow(5), radius = 0.7, clockwise=T,
)
pie(table(diamonds$cut), labels=lbl, main = 'Quality', col=rainbow(5), radius = 1, clockwise=T,
)
?pie
install.packages('pie3d')
library('pie3d')
library(pie3d)
install.packages('pie3D')
install.packages('plotrix')
library(pie3d)
library(plotrix)
pie3d(feq, labels=lbl)
pie3D(feq, labels=lbl)
pie3D(feq, labels=lbl, explode = 0.05)
fan.plot(feq)
fan.plot(feq, labels= lbl)
head(mtcars)
month=1:12
late=c(5,8,7,9,4,6,12,13,8,6,6,4)
plot(1:10, late)
plot(1:12, late)
plot(1:12, late, type=1)
plot(1:12, late, type=2)
?plot
plot(1:12, late, type='1')
plot(1:12, late, type='l')
plot(1:12, late, type='l',lty=2)
plot(iris)
plot(iris[,1:4])
plot(iris)
plot(iris[,1:4])
pairs(iris[,1:4])
mosaicplot(~ Sex + Survived, data =Titanic)
mosaicplot(~ Sex + Survived + Class, data =Titanic)
data(mtcars)
str(mtcars)
str(bs)
table(bs$purpose)
table(bs$department)
table(bs$area)
table(bs$day)
table(bs$cost)
table(bs)
table(bs$purpose)
table(bs$department)
table(bs$area)
table(bs$cost)
table(bs$day)
H&A<-comma(c(54659,61028,53307,46161,54180), format='d')
install.packages('formattable')
library(formattable)
H&A<-comma(c(54659,61028,53307,46161,54180), format='d')
HnA<-comma(c(54659,61028,53307,46161,54180), format='d')
HnA
str(HnA)
HnA<-comma(c(54659,61028,53307,46161,54180), format='d')
HE<-comma(c(31215,29863,32098,39684,29707), format='d')
MC<-comma(c(15107,16133,15222,13208,9986), format='d')
VS<-comma(c(13470,14231,13401,13552,13193), format='d')
BS<-comma(c(16513,14947,15112,14392,17091), format='d')
LAB<-rbind(HnA,HE,MC,VS,BS)
:AB
head(LAB)
LAB<-rbind(HnA,HE,MC,VS,BS, colnames("19년 1Q","19년 2Q","19년 3Q","19년 4Q","20년 1Q"))
LAB<-rbind(HnA,HE,MC,VS,BS, colnames=c("19년 1Q","19년 2Q","19년 3Q","19년 4Q","20년 1Q"))
head(LAB)
LAB<-rbind(HnA,HE,MC,VS,BS)
colnames(LAB)<-=c("19년 1Q","19년 2Q","19년 3Q","19년 4Q","20년 1Q")
colnames(LAB)<-c("19년 1Q","19년 2Q","19년 3Q","19년 4Q","20년 1Q")
head(LAB)
bs
gsub(bs$cost)
gsub(",",""bs$cost)
gsub(",","",bs$cost)
bs$cost<-as.numeric(gsub(",","",bs$cost))
head(bs)
pied(bs$area)
pie(bs$area)
pie(table(bs$area))
pie(table(bs$area), main = "지역")
barplot(table(bs$department), main ="부서명명")
boxplot(Petal.Length~Species, data=iris, main ="품종별 꽃잎의 길이", col=c("green",'red','blue'))
boxplot(mpg ~ , data=mtcars, notch=T)
boxplot(mpg ~ , data=mtcars, notch=T)
hist(dist, main ="Histogram for dist", xlab='dist', ylab='freq',
border='blue', col='green',las=2, breaks=5)
tabls(bs$department,bs$area)
table(bs$department,bs$area)
barplot(table(a), main ="부서명명")
barplot(table(bs$department), main ="부서명")
a<-table(bs$department,bs$area)
a<-table(bs$department,bs$area);a
barplot(a, main ="부서명")
barplot(a, main ="부서명", legend=T)
barplot(a, main ="부서명", legend=T, col=rainbow(6))
barplot(a, main ="부서명", legend=T, beside=T)
barplot(a, main ="부서명", legend=T)
barplot(a, main ="지역별 부서서", legend=T)
barplot(a, main ="지역별 부서", legend=T)
boxplt(bs$cost)
boxplot(bs$cost)
barplot(bs$day)
barplot(table(bs$day))
barplot(table(bs$day), main="day")
barplot(table(bs$day), main="day")
b<-table(bs$department, bs$purpose)
b<-table(bs$department, bs$purpose); b
head(bs)
b<-table(bs$department, bs$purpose); b
scatterplot(b)
plot(b)
bs[,4]
aggregate(bs[,6], by=list(bs$purpose), FUN=mean)
head(LAB)
barplot(LAB)
barplot(LAB, main="사업부문별 매출액액")
barplot(LAB, main="사업부문별 매출액")
barplot(LAB, main="사업부문별 매출액", col=c(#003f5c, #58508d, #bc5090, #ff6361, #ffa600))
barplot(LAB, main="사업부문별 매출액", col=c('#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'))
barplot(LAB, main="사업부문별 매출액", color=c('#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'))
barplot(LAB, main="사업부문별 매출액", color=c('#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'))
barplot(LAB, main="사업부문별 매출액", col=c('#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'))
?barplot
barplot(LAB, main="사업부문별 매출액",
col=c('#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'),
horiz=T)
?barplot
barplot(LAB, main="사업부문별 매출액",
col=c('#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'),
horiz=T, las=1)
barplot(LAB, main="사업부문별 매출액",
col=c('#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'),
horiz=T, las=2,)
barplot(LAB, main="사업부문별 매출액",
col=c('#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'),
horiz=T, las=1,)
barplot(LAB, main="사업부문별 매출액",
col=c('#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'),
horiz=T, las=2,)
barplot(LAB, main="사업부문별 매출액",
col=c('#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'),
horiz=T, las=1,)
barplot(LAB, main="사업부문별 매출액",
col=c('#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'),
horiz=T, las=1, beside=T, xtabs="억 원원")
?barplot
barplot(LAB, main="사업부문별 매출액",
col=c('#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'),
horiz=T, las=1, beside=T, xlab="억 원원")
barplot(LAB, main="사업부문별 매출액",
col=c('#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'),
horiz=T, las=1, beside=T, xlab="억 원")
barplot(LAB, main="사업부문별 매출액",
col=c('#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'),
horiz=T, las=1, beside=T, xlab="억 원", legend=T)
?barplot
barplot(LAB, main="사업부문별 매출액",
col=c('#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'),
horiz=T, las=1, beside=T, xlab="억 원", legend=T,
args.lengend= list(x='topright', bty='o', inset=c(-0.25,0)))
barplot(LAB, main="사업부문별 매출액",
col=c('#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'),
horiz=T, las=1, beside=T, xlab="억 원", legend=T,
args.lengend=list(x='topright', bty='o', inset=c(-0.25,0)))
barplot(LAB, main="사업부문별 매출액",
col=c('#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'),
horiz=T, las=1, beside=T, xlab="억 원", legend=T,
args.legend=list(x='topright', bty='o', inset=c(-0.25,0)))
barplot(LAB, main="사업부문별 매출액",
col=c('#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600'),
horiz=T, las=1, beside=T, xlab="억 원", legend=T,
args.legend=list(x='topright', bty='o', inset=c(-0.25,0)))
data("diamonds")
ds<-diamonds$PricePerCt
head(diamonds)
head(Diamonds)
data(Diamonds)
library(Stat2Data)
install.packages(Stat2Data)
install.packages('Stat2Data')
library(Stat2Data)
data(Diamonds)
head(Diamonds)
ds<-diamonds$PricePerCt
ds<-Diamonds$PricePerCt
hist(ds)
hist(dsm, breaks=9)
hist(ds, breaks=9)
hist(ds, breaks=9, main="캐럿당 가격 분포포")
hist(ds, breaks=9, main="캐럿당 가격 분포",
las=2)
hist(ds, breaks=9, main="캐럿당 가격 분포",
las=2, xlab='캐럿당 가격($)', ylab='빈도수수')
hist(ds, breaks=9, main="캐럿당 가격 분포",
las=2, xlab='캐럿당 가격($)', ylab='빈도')
par(mfrow=c(1,1), mar =c(5,4,4,2)+.1)
hist(ds, breaks=9, main="캐럿당 가격 분포",
las=2, xlab='캐럿당 가격($)', ylab='빈도')
hist(ds, breaks=9, main="캐럿당 가격 분포",
las=2, xlab='캐럿당 가격($)', ylab='빈도',
border = '#457b9d')
color<-rep('#1d3557',9)
color
color[3]<-'#a8dadc'
hist(ds, breaks=9, main="캐럿당 가격 분포",
las=2, xlab='캐럿당 가격($)', ylab='빈도',
border = '#457b9d', col=color ))
color[3]<-'#a8dadc'; color
hist(ds, breaks=9, main="캐럿당 가격 분포",
las=2, xlab='캐럿당 가격($)', ylab='빈도',
border = '#457b9d', col=color))
hist(ds, breaks=9, main="캐럿당 가격 분포",
las=2, xlab='캐럿당 가격($)', ylab='빈도',
border = '#457b9d', col=color)
# Binominal Distribution
Binom<- data.frame(Successes=rbinom(n=10000, size=5,prob=0.3), Size=5)
library(ggplot2)
ggplot(binom, aes(x=Successes)) + geom_histogram(bandwidth=1)
ggplot(Binom, aes(x=Successes)) + geom_histogram(bandwidth=1)
head(Binom)
hist(Binom$Successes)
hist(Binom10$Successes)
Binom10<- data.frame(Successes=rbinom(n=10000, size=10,prob=0.3), Size=5)
Binom100<- data.frame(Successes=rbinom(n=10000, size=100,prob=0.3), Size=5)
Binom1000<- data.frame(Successes=rbinom(n=10000, size=1000,prob=0.3), Size=5)
hist(Binom10$Successes)
hist(Binom100$Successes)
hist(Binom1000$Successes)
par(nfrow(2,2))
par(mfrow(2,2))
par(mfrow=c(2,2))
hist(Binom$Successes)
hist(Binom10$Successes)
hist(Binom100$Successes)
hist(Binom1000$Successes)
head(Binom)
Binom7<- data.frame(Successes=rbinom(n=10000, size=5,prob=0.7), Size=5)
Binom7<- data.frame(Successes=rbinom(n=10000, size=5,prob=0.7), Size=5)
Binom7.1<- data.frame(Successes=rbinom(n=10000, size=100,prob=0.7), Size=100)
Binom7.2<- data.frame(Successes=rbinom(n=10000, size=1000,prob=0.7), Size=1000)
Binom7.3<- data.frame(Successes=rbinom(n=10000, size=10000,prob=0.7), Size=10000)
hist(Binom7$Successes)
hist(Binom7.1$Successes)
hist(Binom7.2$Successes)
hist(Binom7.3$Successes)
Binom8<- data.frame(Successes=rbinom(n=10000, size=100,prob=0.5), Size=100)
hist(Binom8$Successes)
hist(pois1)
pois1<-rpois(n=1000,lambda=1)
pois2<-rpois(n=1000,lambda=3)
pois3<-rpois(n=1000,lambda=5)
pois4<-rpois(n=1000,lambda=10)
hist(pois1)
hist(pois1)
hist(pois2)
hist(pois3)
hist(pois4)
par(mfrow=c(2,2))
hist(pois1)
hist(pois2)
hist(pois3)
hist(pois4)
pois5<-rpois(n=1000,lambda=20)
pois6<-rpois(n=1000,lambda=30)
pois7<-rpois(n=1000,lambda=40)
pois8<-rpois(n=1000,lambda=50)
hist(pois5)
hist(pois6)
hist(pois7)
hist(pois8)
rnorm(n=10)
rnorm(n=10, mean=100, sd=20)
randNorm10<-rnorm(10)
dnorm(randNorm10)
pnorm(randNorm10)
no1<-rnorm(n=1000, mean=10, sd=5)
no2<-rnorm(n=1000, mean=10, sd=10)
no3<-rnorm(n=1000, mean=5, sd=5)
no4<-rnorm(n=1000, mean=5, sd=10)
hist(no1)
hist(no2)
hist(no3)
hist(no4)
Successes=rbinom(n=10000, size=5,prob=0.7); Successes
Successes=rbinom(n=100, size=5,prob=0.7); Successes
?rbinom
hist(Binom7$Successes)
hist(Binom7.1$Successes)
Binom7<- data.frame(Successes=rbinom(n=10000, size=5,prob=0.7), Size=5); Binom7
rbinom(n=10, p=0.4, size=5)
Successes=rbinom(n=100, size=5,prob=0.7); Successes
Binom7<- data.frame(Successes=rbinom(n=10000, size=5,prob=0.7), Size=5); Binom7
Binom7.1<- data.frame(Successes=rbinom(n=10000, size=100,prob=0.7), Size=100)
Binom7.2<- data.frame(Successes=rbinom(n=10000, size=1000,prob=0.7), Size=1000)
hist(Binom7.2$Successes)
hist(Binom7.3$Successes)
mean(Binom7)
mean(Binom7$Successes)
mean(Binom7$Successes)
mean(Binom7.1$Successes)
mean(Binom7.2$Successes)
mean(Binom7.3$Successes)
hist(Binom7$Successes)
Binom7$Successes
Binom7
sd(Binom7.3$Successes)
variance(Binom7.3$Successes)
pois8<-rpois(n=1000,lambda=50)
hist(pois1)
hist(pois2)
hist(pois3)
hist(pois4)
hist(Binom7$Successes)
hist(Binom7.1$Successes)
head(Binom7.1$Successes)
Binom7.1<- data.frame(Successes=rbinom(n=10000, size=100,prob=0.3), Size=100)
head(Binom7.1$Successes)
hist(Binom7.1$Successes)
n <- 10 # 표본의 크기
sid<- 1:100 # 표본 100개
matrix(rnorm(n=100), ncol=10)
head(data)
data<-matrix(rnorm(n=100), ncol=n)
head(data)
xbar<-apply(data,1,mean)
xbar
data<-matrix(rnorm(n=100), ncol=n)
head(data)
xbar<-apply(data,1,mean)
xbar
se<-1/sqrt(n)
alp<-0.05
z<-qnorm(1-alp/2)
lowB <- xbar -z*se ; lowB
uppB <- xbar +z*se ; uppB
cbind(lowB,uppB)
sum(lowB*uppB>0)
sum(lowB*uppB>0)
CL[lowB*uppB>0]
CL <- cbind(lowB,uppB)
CL[lowB*uppB>0]
CL <- cbind(lowB,uppB)
CL <- cbind(lowB,uppB) ;CL
par(mfrow=c(1,1))
plot(xtick, type='n', xlab='표본추출', ylab='z',
xlim=c(1,100), ylim=c(-1.5,1.5), cex.lab=1.8)
xtick<-seq(-3,3,by=0.01)
plot(xtick, type='n', xlab='표본추출', ylab='z',
xlim=c(1,100), ylim=c(-1.5,1.5), cex.lab=1.8)
abline(h=0, col='red', lwe=2, lty=2)
abline(h=0, col='red', lwd=2, lty=2)
l.c <- rep(NA, length(sid))
abline(h=0, col='red', lwd=2, lty=2)
l.c <- rep(NA, length(sid))
l.c <- rep(NA, length(sid))
l.c <- ifelse(lowB*uppB >0, 'red', 'black')
l.c
arrows(1:length(sid), lowB, 1:length(sid))
arrows(1:length(sid), lowB, 1:length(sid), uppB, code =3,
angle=90, length=0.02, col=l.c, lwd =1.5)
CI.t(rt(100,9))
CI.t <-function(x, alpha=0.05) {
n <- length(x)
m <- mean(x)
s <- sd(x)
t <- qt(1-alpha/2, n-1)   # t분포의 확률 t(n-1, alpha/2) -> 양수값 t 값만
se <-s/sqrt(n)
low <- m - t*se
upper <- m +t*se
ci <- c(1-alpha, low, m, upper)
names(ci) <- c("Confidence.level", "lower", "mean", "upper" )
return(ci)
}
CI.t(rt(100,9))
d<- seq(-3,3,by=0.01); d
head(data)
xbar
xbar<-apply(data,2,mean)
xbar
xbar<-apply(data,1,mean)
xbar
mean(data[1,])
data
se<-1/sqrt(n); se
sqrt(n)
sqrt(9)
z<-qnorm(1-alp/2); z
a<-(1-alp/2);a
z<-qnorm(0.025); z
z<-qnorm(1-alp/2); z
xtick<-seq(-3,3,by=0.01)
xtick<-seq(-3,3,by=0.01) ; xticks
xtick<-seq(-3,3,by=0.01) ; xtick
plot(xtick, type='n', xlab='표본추출', ylab='z')
plot(xtick)
plot(xtick, type='n', xlab='표본추출', ylab='z',
xlim=c(1,100), ylim=c(-1.5,1.5))
plot(xtick, type='n', xlab='표본추출', ylab='z',
xlim=c(1,100), ylim=c(-1.5,1.5), cex.lab=1.8)
plot(xtick, type='n', xlab='표본추출', ylab='z',
xlim=c(1,100), ylim=c(-1.5,1.5))
plot(xtick, type='n', xlab='표본추출', ylab='z',
xlim=c(1,100), ylim=c(-1.5,1.5), cex.lab=1.8)
abline(h=0)
abline(h=0, col='red', lwd=2, lty=2)
l.c <- rep(NA, length(sid)); l.c
arrows(1:length(sid), lowB, 1:length(sid), uppB, code =3,
angle=90, length=0.02, col=l.c, lwd =1.5)
A<-c(12.60,15.15,17.62,16.81,15.51,15.12,14.39,15.20,13.70,14.75,15.13,15.66,
13.69, 15.74, 14.96,15.20,16.45,13.66,16.16,14.47)
B<-c(13.77,13.63,12.63,14.13,13.50,13.09,13.96,13.41,14.03,14.25,13.47,13.43,
13.24,14.61,13.82,14.07,15.96,13.69,14.25,14.50)
box<-boxplot(A,B, names=c("car A","car B"))
summary(A)
summary(B)
box$stats
box$out
box
A.cor <- A[A!=box$out[1]]
B.cor <- B[B!=box$out[2]]
boxplot(A.cor, B.cor, names=c("car A","car B"))
box$out[2]
shapiro.test(A.cor)
shapiro.test(B.cor)
t.test(A.cor, B.cor, alternative = 'greater')
var.test(A.cor, B.cor)
x <- c(68.86, 74.64, 75.80, 76.41, 67.37, 79.98, 74.95, 76.36,
72.39, 76.73, 75.56, 73.59, 78.49, 69.49, 72.38, 73.38,
77.29, 80.43, 73.94, 73.35)
x <- c(68.86, 74.64, 75.80, 76.41, 67.37, 79.98, 74.95, 76.36,
72.39, 76.73, 75.56, 73.59, 78.49, 69.49, 72.38, 73.38,
77.29, 80.43, 73.94, 73.35)
y <- c(65.92, 64.49, 68.24, 74.38, 70.82, 61.30, 73.09, 71.20,
74.31, 73.14, 68.76, 71.12, 65.62, 72.11, 72.20, 76.57,
65.26, 73.82, 71.42, 71.93)
temp.A <- c(75.23, 71.74, 79.86, 87.70, 85.13, 80.98, 79.75, 77.42,
80.00, 75.23, 78.59, 79.78, 81.49, 75.20, 81.73, 79.26,
80.00, 83.98, 75.12, 83.07)
temp.B <- c(75.43, 70.02, 90.93, 76.95, 79.44, 77.49, 61.68, 84.93,
67.89, 68.17, 87.55, 68.05, 68.21, 91.73, 85.00, 73.84,
84.93, 52.33, 73.64, 59.69)
boxplot(x,y)
summary(x,y)
summary(x)
summary(y)
shapiro.test(x)
shapiro.test(y)
var.test(x,y)
t.test(x,y, alternative = "greater",var.equal = T, conf.level = 0.95)
