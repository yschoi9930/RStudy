annotate("text",
x=14, # 살짝 옆으로 이동
y=max_dust,
label=as.character(max_dust),
color='red')+ # 118 text 표시
theme(axis.text.x=element_text(angle=90,hjust=1,size=5)) +
labs(y='중구', x='2021년 1월',
title = '2021년 1월 중구 미세먼지',
caption='2021년 1월 1일부터 31일까지지')
ggplot(data=dustdata_wide[c(1:31),], aes(x=yyyymmdd, y=중구), lax=2) +
geom_line(group=1) +
geom_point() +
geom_vline(xintercept = max_day, col='red') +
annotate("text",
x=14, # 살짝 옆으로 이동
y=max_dust,
label=as.character(max_dust),
color='red')+ # 118 text 표시
theme(axis.text.x=element_text(angle=90,hjust=1,size=5)) +
theme(plot.title=element_text(face='bold', size=20,hjust=0.5))+
labs(y='중구', x='2021년 1월',
title = '2021년 1월 중구 미세먼지',
caption='2021년 1월 1일부터 31일까지지')
ggplot(data=dustdata_wide[c(1:31),], aes(x=yyyymmdd, y=중구), lax=2) +
geom_line(group=1) +
geom_point() +
geom_vline(xintercept = max_day, col='red') +
annotate("text",
x=14, # 살짝 옆으로 이동
y=max_dust,
label=as.character(max_dust),
color='red')+ # 118 text 표시
theme(axis.text.x=element_text(angle=90,hjust=1,size=5)) +
theme(plot.title=element_text(face='bold', size=20,hjust=10))+
labs(y='중구', x='2021년 1월',
title = '2021년 1월 중구 미세먼지',
caption='2021년 1월 1일부터 31일까지지')
ggplot(data=dustdata_wide[c(1:31),], aes(x=yyyymmdd, y=중구), lax=2) +
geom_line(group=1) +
geom_point() +
geom_vline(xintercept = max_day, col='red') +
annotate("text",
x=14, # 살짝 옆으로 이동
y=max_dust,
label=as.character(max_dust),
color='red')+ # 118 text 표시
theme(axis.text.x=element_text(angle=90,hjust=1,size=5)) +
theme(plot.title=element_text(face='bold', size=20,hjust=-0.5))+
labs(y='중구', x='2021년 1월',
title = '2021년 1월 중구 미세먼지',
caption='2021년 1월 1일부터 31일까지지')
ggplot(data=dustdata_wide[c(1:31),], aes(x=yyyymmdd, y=중구), lax=2) +
geom_line(group=1) +
geom_point() +
geom_vline(xintercept = max_day, col='red') +
annotate("text",
x=14, # 살짝 옆으로 이동
y=max_dust,
label=as.character(max_dust),
color='red')+ # 118 text 표시
theme(axis.text.x=element_text(angle=90,hjust=1,size=5)) +
theme(plot.title=element_text(face='bold', size=20,hjust=1))+
labs(y='중구', x='2021년 1월',
title = '2021년 1월 중구 미세먼지',
caption='2021년 1월 1일부터 31일까지지')
ggplot(data=dustdata_wide[c(1:31),], aes(x=yyyymmdd, y=중구), lax=2) +
geom_line(group=1) +
geom_point() +
geom_vline(xintercept = max_day, col='red') +
annotate("text",
x=14, # 살짝 옆으로 이동
y=max_dust,
label=as.character(max_dust),
color='red')+ # 118 text 표시
theme(axis.text.x=element_text(angle=90,hjust=1,size=5)) +
theme(plot.title=element_text(face='bold', size=20,hjust=0.3))+
labs(y='중구', x='2021년 1월',
title = '2021년 1월 중구 미세먼지',
caption='2021년 1월 1일부터 31일까지지')
ggplot(data=dustdata_wide[c(1:31),], aes(x=yyyymmdd, y=중구), lax=2) +
geom_line(group=1) +
geom_point() +
geom_vline(xintercept = max_day, col='red') +
annotate("text",
x=14, # 살짝 옆으로 이동
y=max_dust,
label=as.character(max_dust),
color='red')+ # 118 text 표시
theme(axis.text.x=element_text(angle=90,hjust=1,size=5)) +
theme(plot.title=element_text(face='bold', size=20,hjust=0.5))+
labs(y='중구', x='2021년 1월',
title = '2021년 1월 중구 미세먼지',
caption='2021년 1월 1일부터 31일까지지')
ggplot(data=dustdata_wide[c(1:31),], aes(x=yyyymmdd, y=중구), lax=2) +
geom_line(group=1) +
geom_point() +
geom_vline(xintercept = max_day, col='red') +
annotate("text",
x=14, # 살짝 옆으로 이동
y=max_dust,
label=as.character(max_dust),
color='red')+ # 118 text 표시
theme(axis.text.x=element_text(angle=90,hjust=1,size=5)) +
theme(plot.title=element_text(face='bold', size=20,hjust=0.5))+
theme_bw()+
labs(y='중구', x='2021년 1월',
title = '2021년 1월 중구 미세먼지',
caption='2021년 1월 1일부터 31일까지지')
ggplot(dust_data_long, aes(x=variable, y=value,fill=variable))
ggplot(dustdata_long, aes(x=variable, y=value,fill=variable))
+ geom_boxplot()
ggplot(dustdata_long, aes(x=variable, y=value,fill=variable))
+ geom_boxplot()
ggplot(dustdata_long, aes(x=variable, y=value,fill=variable))
+ geom_boxplot()
+ geom_boxplot()
library(ggplot2)
+ geom_boxplot()
head(dustdata_long)
ggplot(dustdata_long, aes(x=variable, y=value,fill=variable)) +
geom_boxplot()
ggplot(dustdata_long, aes(x=variable, y=value)) +
geom_boxplot()
+
theme(axis.line.x = ,
axis.ticks.x= ,
axis.text.x=)
ggplot(dustdata_long, aes(x=variable, y=value,fill=variable)) +
geom_boxplot()
ggplot(dustdata_long, aes(x=variable, y=value,fill=variable)) +
geom_boxplot() +
theme(axis.line.x = element_blank() ,
axis.ticks.x= element_blank(),
axis.text.x= element_blank())
ggplot(dustdata_long, aes(x=variable, y=value,fill=variable)) +
geom_boxplot()
ggplot(dustdata_long, aes(x=variable, y=value,fill=variable)) +
geom_boxplot() +
theme(axis.line.x = element_blank() ,
axis.ticks.x= element_blank(),
axis.text.x= element_blank())
ggplot(dustdata_long, aes(x=variable, y=value,fill=variable)) +
geom_boxplot() +
theme(axis.line.x = element_blank() ,
axis.ticks.x= element_blank(),
axis.text.x= element_blank()) +
theme(legend.position = "bottom")
ggplot(dustdata_long, aes(x=variable, y=value,fill=variable)) +
geom_boxplot() +
theme(axis.text.x=element_text(angle=90,hjust=1,size=5))
ggplot(dustdata_long, aes(x=variable, y=value,fill=variable)) +
geom_boxplot() +
theme(axis.text.x=element_text(angle=90,hjust=1,size=5)) +
theme(legend.position = "none")
ggplot(dustdata_long, aes(x=variable, y=value,fill=variable)) +
geom_boxplot() +
theme(axis.text.x=element_text(angle=90,hjust=1,size=15)) +
theme(legend.position = "none")
ggplot(dustdata_long, aes(x=variable, y=value,fill=variable)) +
geom_boxplot() +
theme(axis.text.x=element_text(angle=90,hjust=1,size=13)) +
theme(legend.position = "none")
# 시계열 그래프
ggplot(dustdata_long, aes(x=yyyymmdd, y=value,fill=variable)) +
geom_line() +
theme(axis.line.x = element_blank() ,
axis.ticks.x= element_blank(),
axis.text.x= element_blank()) +
theme(legend.position = "bottom")
ggplot(dustdata_long, aes(x=yyyymmdd, y=value,fill=yyyymmdd)) +
geom_line() +
theme(axis.line.x = element_blank() ,
axis.ticks.x= element_blank(),
axis.text.x= element_blank()) +
theme(legend.position = "bottom")
View(dustdata_long)
ggplot(dustdata_long, aes(x=yyyymmdd, y=value)) +
geom_line(aes(group=variable,color=variable) +
theme(axis.line.x = element_blank() ,
axis.ticks.x= element_blank(),
axis.text.x= element_blank()) +
theme(legend.position = "bottom")
ggplot(dustdata_long, aes(x=yyyymmdd, y=value)) +
geom_line(aes(group=variable,color=variable)) +
theme(axis.line.x = element_blank() ,
axis.ticks.x= element_blank(),
axis.text.x= element_blank()) +
theme(legend.position = "bottom")
ggplot(dustdata_long, aes(x=yyyymmdd, y=value)) +
geom_line(aes(group=variable,colour=variable)) +
theme(axis.line.x = element_blank() ,
axis.ticks.x= element_blank(),
axis.text.x= element_blank()) +
theme(legend.position = "bottom")
ggplot(dustdata_long, aes(x=yyyymmdd, y=value)) +
geom_line(aes(group=variable,col=variable)) +
theme(axis.line.x = element_blank() ,
axis.ticks.x= element_blank(),
axis.text.x= element_blank()) +
theme(legend.position = "bottom")
gu_mean<-colMeans(dustdata_wide[-1]) # 각 열 평균을 반환
class(gu_mean)
head(gu_mean)
# 벡터형이므로 df로 변환
gu<-names(gu_mean) # 차후에  join key로 사용
gu_mean_df <- data.frame(gu_mean,gu)
head(gu_mean_df)
# 각 구별 미세먼지 최대, 최소값표 선출
gu_max <- apply(dustdata_wide[-1],2,FUN=function(x) max(x)); gu_max
gu_max <- apply(dustdata_wide[-1],2,FUN=function(x) min(x)); gu_min
gu_min <- apply(dustdata_wide[-1],2,FUN=function(x) min(x)); gu_min
gu_max_df <-data.frame(gu_max,gu)
gu_min_df <-data.frame(gu_min,gu)
gu_min_max_df <- left_join(gu_max_df, gu_min_df, by='gu'); gu_min_max_df
gu_total_df <- left_join(gu_min_max_df, gu_mean_df, by='gu')
View(gu_total_df)
# 각 구별 미세먼지 최대, 최소값표 선출
gu_max <- apply(dustdata_wide[-1],2,FUN=function(x) max(x)); gu_max
barplot(gu_mean_df)
barplot(gu_total_df[4])
barplot(gu_total_df[[4]])
ggplot(gu_total_df, aes(x=gu, y=gu_mean))
ggplot(gu_total_df, aes(x=gu, y=gu_mean)) +
geom_bar()
ggplot(gu_total_df, aes(x=gu, y=gu_mean)) +
geom_col()
ggplot(gu_total_df, aes(x=reorder(gu), y=gu_mean)) +
geom_col()
ggplot(gu_total_df, aes(x=reorder(gu,gu_mean), y=gu_mean)) +
geom_col()
ggplot(gu_total_df, aes(x=reorder(gu,-gu_mean), y=gu_mean)) +
geom_col()
ggplot(gu_total_df, aes(x=reorder(gu,-gu_mean), y=gu_mean)) +
geom_col(col=gu)
ggplot(gu_total_df, aes(x=reorder(gu,-gu_mean), y=gu_mean)) +
geom_col() +
theme(axis.text.x=element_text(angle=90,hjust=1,size=5))
ggplot(gu_total_df, aes(x=reorder(gu,-gu_mean), y=gu_mean)) +
geom_col() +
theme(axis.text.x=element_text(angle=90,hjust=1,size=10))
ggplot(gu_total_df, aes(x=reorder(gu,-gu_mean), y=gu_mean)) +
geom_col() +
theme(axis.text.x=element_text(angle=90,hjust=1,size=10)) +
labs(y='평균 미세먼지 농도', x='자치구',
title = '2021년 구별 미세먼지 평균 수치')
ggplot(gu_total_df, aes(x=reorder(gu,-gu_mean), y=gu_mean)) +
geom_col() +
theme(axis.text.x=element_text(angle=90,hjust=1,size=10)) +
theme(plot.title=element_text(size=20))
labs(y='평균 미세먼지 농도', x='자치구',
title = '2021년 구별 미세먼지 평균 수치')
ggplot(gu_total_df, aes(x=reorder(gu,-gu_mean), y=gu_mean)) +
geom_col() +
theme(axis.text.x=element_text(angle=90,hjust=1,size=10)) +
theme(plot.title=element_text(size=20, hjust=0.5))
labs(y='평균 미세먼지 농도', x='자치구',
title = '2021년 구별 미세먼지 평균 수치')
ggplot(gu_total_df, aes(x=reorder(gu,-gu_mean), y=gu_mean)) +
geom_col() +
theme(axis.text.x=element_text(angle=90,hjust=1,size=10)) +
theme(plot.title=element_text(size=20, hjust=0.5))
labs(y='평균 미세먼지 농도', x='자치구',
title = '2021년 구별 미세먼지 평균 수치')
ggplot(gu_total_df, aes(x=reorder(gu,-gu_mean), y=gu_mean)) +
geom_col() +
theme(axis.text.x=element_text(angle=90,hjust=1,size=10)) +
theme(plot.title=element_text(size=, hjust=0.5)) +
labs(y='평균 미세먼지 농도', x='자치구',
title = '2021년 구별 미세먼지 평균 수치')
ggplot(gu_total_df, aes(x=reorder(gu,-gu_mean), y=gu_mean)) +
geom_col() +
theme(axis.text.x=element_text(angle=90,hjust=1,size=10)) +
theme(plot.title=element_text(face ='bold', size=, hjust=0.5)) +
labs(y='평균 미세먼지 농도', x='자치구',
title = '2021년 구별 미세먼지 평균 수치')
ggplot(gu_total_df, aes(x=reorder(gu,-gu_mean), y=gu_mean)) +
geom_col() +
theme(axis.text.x=element_text(angle=90,hjust=1,size=10)) +
theme(plot.title=element_text(face ='bold', size=20, hjust=0.5)) +
labs(y='평균 미세먼지 농도', x='자치구',
title = '2021년 구별 미세먼지 평균 수치')
ggplot(gu_total_df, aes(x=gu), y=c(gu_max, gu_min))
ggplot(gu_total_df, aes(x=gu), y=c(gu_max, gu_min)) +
geom_line()
ggplot(gu_total_df, aes(x=gu, y=c(gu_max, gu_min)) +
geom_line()
ggplot(gu_total_df, aes(x=gu, y=c(gu_max)) +
geom_line()
ggplot(gu_total_df, aes(x=gu, y=gu_max) +
geom_line()
ggplot(gu_total_df, aes(x=reorder(gu,-gu_mean))) +
geom_col(aes(y=gu_mean,fill=gu)) +
geom_line(aes(y=gu_min),group=1,color='blue', size=2) +
geom_line(aes(y=gu_max),group=1,color='red', size=2)
theme(axis.text.x=element_text(angle=90,hjust=1,size=10)) +
theme(plot.title=element_text(face ='bold', size=20, hjust=0.5)) +
labs(y='평균 미세먼지 농도', x='자치구',
title = '2021년 구별 미세먼지 평균 수치')
ggplot(gu_total_df, aes(x=reorder(gu,-gu_mean))) +
geom_col(aes(y=gu_mean,fill=gu)) +
geom_line(aes(y=gu_min),group=1,color='blue', size=2) +
geom_line(aes(y=gu_max),group=1,color='red', size=2) +
theme(axis.text.x=element_text(angle=90,hjust=1,size=10)) +
theme(plot.title=element_text(face ='bold', size=20, hjust=0.5)) +
labs(y='평균 미세먼지 농도', x='자치구',
title = '2021년 구별 미세먼지 평균 수치')
ggplot(gu_total_df, aes(x=reorder(gu,-gu_mean))) +
geom_col(aes(y=gu_mean,fill=gu)) +
geom_line(aes(y=gu_min),group=1,color='blue', size=2) +
geom_line(aes(y=gu_max),group=1,color='red', size=2) +
theme(axis.text.x=element_text(angle=90,hjust=1,size=10)) +
theme(plot.title=element_text(face ='bold', size=20, hjust=0.5)) +
labs(y='평균 미세먼지 농도', x='자치구',
title = '2021년 구별 미세먼지 평균 수치')
ggplot(gu_total_df, aes(reorder(x=gu,-gu_mean))) +
geom_col(aes(y=gu_mean,fill=gu)) +
geom_line(aes(y=gu_min),group=1,color='blue', size=2) +
geom_line(aes(y=gu_max),group=1,color='red', size=2) +
theme(axis.text.x=element_text(angle=90,hjust=1,size=10)) +
theme(plot.title=element_text(face ='bold', size=20, hjust=0.5)) +
labs(y='평균 미세먼지 농도', x='자치구',
title = '2021년 구별 미세먼지 평균 수치')
ggplot(gu_total_df, aes(reorder(x=gu,-gu_mean))) +
geom_col(aes(y=gu_mean,fill=gu)) +
geom_line(aes(y=gu_min),group=1,color='blue', size=2) +
geom_line(aes(y=gu_max),group=1,color='red', size=2) +
theme(axis.text.x=element_text(angle=90,hjust=1,size=10)) +
theme(plot.title=element_text(face ='bold', size=20, hjust=0.5)) +
labs(y='평균 미세먼지 농도', x='자치구',
title = '2021년 구별 미세먼지 평균 수치')
# 각 구별 미세먼지 최대, 최소값표 선출
gu_max <- apply(dustdata_wide[-1],2,FUN=function(x) max(x)); gu_max
gu_max_df <-data.frame(gu_max,gu)
gu_min <- apply(dustdata_wide[-1],2,FUN=function(x) min(x)); gu_min
gu_min_df <-data.frame(gu_min,gu)
gu_min_max_df <- left_join(gu_max_df, gu_min_df, by='gu'); gu_min_max_df
gu_total_df <- left_join(gu_min_max_df, gu_mean_df, by='gu')
View(gu_total_df)
ggplot(gu_total_df, aes(reorder(x=gu,-gu_mean))) +
geom_col(aes(y=gu_mean,fill=gu)) +
geom_line(aes(y=gu_min),group=1,color='blue', size=2) +
geom_line(aes(y=gu_max),group=1,color='red', size=2) +
theme(axis.text.x=element_text(angle=90,hjust=1,size=10)) +
theme(plot.title=element_text(face ='bold', size=20, hjust=0.5)) +
labs(y='미세먼지 농도', x='자치구',
title = '2021년 구별 미세먼지 평균 수치',
caption = '2021년 1월 1일부터 3월 1일까지')
install.packages('ggmap')
library(ggmap)
register_google(key='')
ggseoul <- get_googlemap('seoul',maptype = 'terrain')
register_google(key='AIzaSyCOgmf5KZZ19kjxRBLsZUnEpqRfNXrqdTk')
ggseoul <- get_googlemap('seoul',maptype = 'terrain')
ggmap(ggseoul)
# 구글 지도 가져오기 : 구글 서버에 요청을 보낸다
# get_googlemap ('기준위치', zoom 정보(생략가능), 지도종류(생략가능))
# 지도 종류 : terrain, satellite, roadmap, hybrid
ggseoul <- get_googlemap('대전전',maptype = 'terrain')
# 구글 지도 가져오기 : 구글 서버에 요청을 보낸다
# get_googlemap ('기준위치', zoom 정보(생략가능), 지도종류(생략가능))
# 지도 종류 : terrain, satellite, roadmap, hybrid
ggseoul <- get_googlemap('대전',maptype = 'terrain')
# gg_seoul의 위치 값에 따른 구글 지도 호출
ggmap(ggseoul)
# 구글 지도 가져오기 : 구글 서버에 요청을 보낸다
# get_googlemap ('기준위치', zoom 정보(생략가능), 지도종류(생략가능))
# 지도 종류 : terrain, satellite, roadmap, hybrid
ggseoul <- get_googlemap('청주',maptype = 'terrain')
# gg_seoul의 위치 값에 따른 구글 지도 호출
ggmap(ggseoul)
# gg_seoul의 위치 값에 따른 구글 지도 호출
ggmap(ggseoul)
# 위 경도 얻어오기
# getgeocode('주소 혹은 지역명')를 이용함
# 한글의 경우에는 utf-8로 변환한 후 얻어옴
# enc2utf8() 함수를 이용해서 작업
geo_code <- enc2utf8("대전역") %>% geocode()
geo_code
geo_code("대전역역")
geo_code("대전역")
geocode("대전역")
class(geo_code)
typeof(geo_code)
# 구글 지도 가져오기 : 구글 서버에 요청을 보낸다
# get_googlemap ('기준위치', zoom 정보(생략가능), 지도종류(생략가능))
# 지도 종류 : terrain, satellite, roadmap, hybrid
ggseoul <- get_googlemap('대전',maptype = 'terrain')
# gg_seoul의 위치 값에 따른 구글 지도 호출
ggmap(ggseoul)
get_googlemap("대전역", maptype = "roadmap", zoom =13) %>% ggmap() +
geom_point(data=geo_code,
aes(x=lon,y=lat),
size=5)
get_googlemap("seoul", maptype = "roadmap", zoom =13) %>% ggmap() +
geom_point(data=geocode('경복궁'),
aes(x=lon,y=lat),
size=5)
# 지자체 위경도 얻어오기
register_google(key='AIzaSyCOgmf5KZZ19kjxRBLsZUnEpqRfNXrqdTk')
str(gu_mean_df)
geocode(gu_mean_df$gu)
gu_code <- geocode(gu_mean_df$gu)
View(gu_code)
code_df<- cbind(gu_mean_df,gu_code)
View(code_df)
# 지도 얻어오기
map <- get_googlemap('용산구',map='roadmap', zoom=11)
ggmap(map)
ggmap(map) +
geom_point(data=code_df,
aes(x=lon, y=lat),
size=gu_mean,
color=gu_mean)
ggmap(map) +
geom_point(data=code_df,
aes(x=lon, y=lat),
size=gu_mean,
color=gu)
ggmap(map) +
geom_point(data=code_df,
aes(x=lon, y=lat),
size=gu_mean,
colour=gu)
ggmap(map) +
geom_point(data=code_df,
aes(x=lon, y=lat),
size=gu_mean,
color=gu_mean)
ggmap(map) +
geom_point(data=code_df,
aes(x=lon, y=lat),
size=gu_mean/3,
color=gu_mean)
ggmap(map) +
geom_point(data=code_df,
aes(x=lon, y=lat),
size=gu_mean/3,
color=gu_mean,
alpha=0.5)
ggmap(map) +
geom_point(data=code_df,
aes(x=lon, y=lat),
size=gu_mean/3,
color=gu_mean,
alpha=0.5) +
scale_color_gradient(low="skyblue", high='red')
ggmap(map) +
geom_point(data=code_df,
aes(x=lon, y=lat),
size=gu_mean/3,
color=gu_mean,
alpha=0.5) +
scale_color_gradient(low="skyblue", high='blue')
ggmap(map) +
geom_point(data=code_df,
aes(x=lon, y=lat),
size=gu_mean/3,
color=gu_mean,
alpha=0.5) +
scale_colour_gradient(low="skyblue", high='blue')
ggmap(map) +
geom_point(data=code_df,
aes(x=lon, y=lat),
size=gu_mean/3,
color=gu_mean,
alpha=0.5) +
scale_fill_gradient(low="skyblue", high='blue')
ggmap(map) +
geom_point(data=code_df,
aes(x=lon, y=lat),
size=gu_mean/3,
color=gu_mean,
alpha=0.5) +
scale_fill_gradient(low="skyblue", high='blue')
rawdata <- read.xlsx("data/subwaydata")
library(dplyr)
rawdata <- read.xlsx("data/subwaydata")
rawdata <- read.xlsx("data/subwaydata.xlsx")
rawdata <- read.csv("data/subwaydata.csv")
# 지하철역 데이터 가공
# 지하철역 정보에서 역명, 주소 추출하고 주소로 위경도 값 추출
library(readxl)
library(dplyr)
library(ggplot2)
library(reshape2)
rawdata <- read.csv("data/subwaydata.xlsx")
rawdata <- read.xlsx("data/subwaydata.xlsx")
rawdata <- read_xlsx("data/subwaydata.xlsx")
head(rawdata)
newdata <- rawdata[,3,4,6]
head(newdata)
newdata <- rawdata[,3:6]
head(newdata)
newdata <- rawdata[,c(3:5,6)]
head(newdata)
newdata <- rawdata[,c(3:4,6)]
head(newdata)
str(newdata)
geodata <- geocode(newdata['역주소'])
geodata <- geocode(newdata[3])
geodata <- geocode(newdata[,3])
geodata <- geocode(newdata$역주소)
View(newdaata)
View(newdata)
geodata <- geocode(as.character(newdata$역주소))
finalcode <- cbind(newdata, geodata)
View(finalcode)
line2code <- filter(finalcode$호선==2)
line2code <- filter(finalcode$호선 %in% c(2))
line2code <- finalcode %>% filter(호선 %in% c(2))
View(line2code)
write.csv(line2code, 'line2code')
