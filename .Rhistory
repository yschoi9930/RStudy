odd<-d[1:100,2]
odd<-d(1:100,2)
odd<-seq(1,100,2)
odd
pick<-c(odd[3],odd[7],odd[32])
pick2<-c(odd[3,7,32])
pick2<-odd[c(3,7,32)]
names(pick)<-c('3rd','7th','32th')
pick
pick(-'7th')
pick["7th"]
pick[c("7th")]
help(index)
which('7th')
which(x='7th')
sum(1:5000)
sum(even)
even<-(2,101,2)
even
sum(even)
even<-seq(2,101,2)
even
sum(even)
v1<-c('T','T','F','T')
sum(v1)
pick[c('3rd','32th')]
pick['3rd']<-3
pick
even<-seq(2,101,2); even
student<-data.frame(sex,age,name); student
sex <- c('F','M','M','M','F')
age<- c(21,20,25,30,26)
name<-c('철수','길동','관순','감찬','영희')
student<-data.frame(sex,age,name); student
str(student)
student$sex<-factor(student$sex)
str(student)
student[1,2]
view(student)
View(student)
student<-edit(student)
colnames(student)
colSums(student$age)
d<-c('mon',2)
d
matrix(c(2,10,18,4,12,20,6,14,22,8,16,24),nrow=4, byrow=F)
matrix(c(2,10,18,4,12,20,6,14,22,8,16,24),nrow=4, byrow=T)
matrix(c(2,4,6,8,10,12,14,16,18,20,22,24), ncol=3, byrow=F)
matrix(c(9,7,5,3,8,11,2,9), ncol=4)
matrix(c(9,7,5,3,8,11,2,9), nrow=2)
matrix(c(9,7,5,3,8,11,2,9), ncol=4, byrow=T)
a<-matrix(c(9,7,5,3,8,11,2,9), ncol=4, byrow=T)
colnames(a)<-c('a','b','c','d')
colnames(a)<-c('a','b','c','d'); a
rownames(a)<-c('x','y'); a
rownames(a)<-c('x','y');
rownames(a)<-c('x','y'); a
b<-t(a);b
df<-data.frame(a)
df<-data.frame(a); df
str(df)
df.new<-append(df,info)
info<-c(3,4)
df.new<-append(df,info)
df.new<-append(df,info); df.new
df2<-data.frame(blood,rh,age); df2
blood<-c('A','O','AB','B','B')
rh<-c('+','+','-','+','+')
age<-c(21,30,43,17,26)
df2<-data.frame(blood,rh,age); df2
colnames(df2)
df.nb<-subset(df2, 'blood'!='B'); df.nb
df.nb<-subset(df2, blood!='B'); df.nb
str(cars)
dim(cars)
a<-matrix(1:12, nrow=3)
a<-matrix(1:12, nrow=3); a
Q8.1<- matrix(1:12, nrow=3) %% 3; Q8.1
Q8.2<- matrix(1:12, nrow=3) + 3; Q8.2
Q8.3<- matrix(1:12, nrow=3) + matrix(1:12, nrow=4); Q8.3
Q8.4<- matrix(1:12, nrow=3) + matrix(1:12, nrow=3); Q8.4
Q8.5<- rbind(matrix(1:9, nrow=3), c('1','2','3')) +3 ; Q8.5
Q8.5<- rbind(matrix(1:9, nrow=3), c(1,2,3)) +3 ; Q8.5
Q8.5<- rbind(matrix(1:9, nrow=3), c('1','2','3')) +3 ; Q8.5
love<-data.frame(번호,제목,좋아요)
번호<-1:7
제목<-c('그대랑','다툼','빨래','두통','보조개','매듭','이상해')
좋아요<-c(16075,8218,12119,738,3200,16144,5110)
love<-data.frame(번호,제목,좋아요)
love<-data.frame(번호,제목,좋아요); love
best<-subet(love, max(좋아요)); best
best<-subset(love, max(좋아요)); best
best<-subset(love, 좋아요=max); best
best<-subset(love, 좋아요=max(좋아요)); best
a<- max(좋아요); a
best<-subset(love, 좋아요==max(좋아요)); best
스티브<-c(97,100,83,95,92)
엔더맨<-c(88,82,90,91,87)
크리퍼<-c(100,96,76,89,95)
mid<-data.frame(스티브,엔더맨,크리퍼)
mid<-data.frame(스티브,엔더맨,크리퍼); mid
mid<-t(data.frame(스티브,엔더맨,크리퍼 )); mid
colnames(mid)<-c('국어','역사','수학','과학','영어'); mid
스티브_f<-c(94,95,90,92,89)
엔더맨_f<-c(92.95.87.95.94)
크리퍼_f<-c(100,100,85,84,96)
final<-t(data.frame(스티브_f,엔더맨_f,크리퍼_f )); final
colnames(final)<-c('국어','역사','수학','과학','영어'); final
스티브_f<-c(94,95,90,92,89)
엔더맨_f<-c(92.95.87.95.94)
크리퍼_f<-c(100,100,85,84,96)
스티브_f<-c(94,95,90,92,89)
엔더맨_f<-c(92,95,87,95,94)
크리퍼_f<-c(100,100,85,84,96)
final<-t(data.frame(스티브_f,엔더맨_f,크리퍼_f )); final
colnames(final)<-c('국어','역사','수학','과학','영어'); final
levels(favorite)
favorite<-c('여름','봄','여름','겨울','봄','겨울','여름','여름','봄','가을')
levels(favorite)
favorite<-factor('여름','봄','여름','겨울','봄','겨울','여름','여름','봄','가을')
levels(favorite)
favorite<-factor('여름','봄','여름','겨울','봄','겨울','여름','여름','봄','가을')
favorite<-factor(fav)
fav<-c('여름','봄','여름','겨울','봄','겨울','여름','여름','봄','가을')
favorite<-factor(fav)
levels(favorite)
country<-c('호주','독일','영국','일본','미국','중국','호주','영국','중국','일본'
'터키','미국','중국','중국','호주','터키','독일','일본','중국','독일')
country<-c('호주','독일','영국','일본','미국','중국','호주','영국','중국','일본',
'터키','미국','중국','중국','호주','터키','독일','일본','중국','독일')
country<-factor(c)
country_factor<-factor(c)
country_factor<-factor(country)
levels(country)
levels(country_factor)
as.integer(country_factor)
avg<-(mid/final)/2; avg
avg<-(mid+final)/2; avg
df<-data.frame(a); df
rownames(a)<-c('x','y'); a
a<-matrix(c(9,7,5,3,8,11,2,9), ncol=4, byrow=T)
colnames(a)<-c('a','b','c','d'); a
rownames(a)<-c('x','y'); a
b<-t(a);b
df<-data.frame(a); df
str(df)
info<-c(3,4); info
info<-matrix(c(3,4), byrow=T); info
df.new<-append(df,info); df.new
df.new<-rbind(df,info); df.new
df.new<-cbind(df,info); df.new
matrix(c(2,4,6,8,10,12,14,16,18,20,22,24), ncol=3)
str(df)
df<-data.frame(a); df
df.new2(m,info); df.new2
cars
class(cars)
str(cars)
dim(cars)
h.list<-c('balling','tennis','ski')
person <-list(name='Tom', age=25,student=TRUE, hobby=h.list)
person[1:3]
person[[1]]
person[[1:3]]
person[[2]]
person[[2,3]]
person[[2],[3]]
person$hobby[[1:2]]
person$hobby[1:2]
cafe$price
cafe<-list(espresso=c(4,5,3,6,5,4,7),
americano=c(63,68,64,68,72,89,94),
latte=c(61,70,59,71,71,92,88),
price=c(2.0,2.5,3.0),
menu = ('espresso','americano','latte'))
cafe<-list(espresso=c(4,5,3,6,5,4,7),
americano=c(63,68,64,68,72,89,94),
latte=c(61,70,59,71,71,92,88),
price=c(2.0,2.5,3.0),
menu =c('espresso','americano','latte'))
cafe$price
cafe$menu<-factor(cafe$menu)
cafe
cars
str(cars)
dim(cars)
head(cars)
summary(cars)
colMeans(cars)
a<-(dist==max(dist)); a
a<-(dist==max('dist')); a
a<-subset(cars, dist==max(dist)); a
max(dist)
max(cars,dist)
max(dist)
max(cars)
max(cars$dist)
which.max(cars$dist)
max(cars$dist)
head(cars, n=10)
str(InspectSprays)
str(InsectSprays)
summary(InsectSprays)
is.matrix(InsectSprays)
tail(InsectSprays)
levels(InsectSprays$spray)
sum(levels(InsectSprays$spray))
summary(InsectSprays$spray)
class(InsectSprays)
table(levels(InsectSprays$spray))
table(InsectSprays$spray)
InspectSprays.e <- subset(InsectSprays, spray=='E') ; InspectSprays.e
colMeans(InspectSprays.e)
colMeans(InspectSprays.e$count)
Means(InspectSprays.e$count)
Mean(InspectSprays.e$count)
mean(InspectSprays.e$count)
ls
ls()
fruit<-data.frame(No=no, Name=name,Price = prices,QTY=qty) ;fruit
no<- c(1,2,3,4)
name<-c("Apple","Banana","Peach","Berry")
prices<-c(500,200,200,50)
qty<-c(5,2,7,9)
fruit<-data.frame(No=no, Name=name,Price = prices,QTY=qty) ;fruit
save(no,name,prices,qty,fruit,file="test.data")
ls()
rm(list=ls())
fruit<-data.frame(No=no, Name=name,Price = prices,QTY=qty) ;fruit
no<- c(1,2,3,4)
name<-c("Apple","Banana","Peach","Berry")
prices<-c(500,200,200,50)
qty<-c(5,2,7,9)
fruit<-data.frame(No=no, Name=name,Price = prices,QTY=qty) ;fruit
save(no,name,prices,qty,fruit,file="test.data")
ls()
load("test.data")
getwd()
list.files()
file.exists("test.data")
file.exists("123")
install.packages('svDialogs')
library(svDialogs)
svDialogs::dlg_input
svDialogs::dlg_input()
user.input<-digInput('Input income')%res
user.input<-dlgInput('Input income')%res
svDialogs::dlg_input()
user.input
user.input<-dlgInput('Input income')$res
user.input
user.input
user.input<-dlgInput('Input income')$res
user.input
income <- as numeric(user.input)
income <- as.umeric(user.input)
income <- as.numeric(user.input)
income
tax <- income *0.05; tax
cat('세금 : ', tax)
weight.input<-dlgInput('Input weight')$res
height.input<-digInput('Input height')$res
weight <- as.numeric(weight.input)
height <- as.numeric(height.input)
BMI <- weight/(height)^2
weight.input<-dlgInput('Input weight')$res
weight <- as.numeric(weight.input)
height.input<-digInput('Input height')$res
height <- as.numeric(height.input)
weight.input<-dlgInput('Input weight')$res
weight <- as.numeric(weight.input)
height.input<-digInput('Input height')$res
height <- as.numeric(height.input)
height.input<-digInput('Input height')$res
weight.input<-dlgInput('Input weight')$res
weight <- as.numeric(weight.input)
height.input<-dlgInput('Input height')$res
height <- as.numeric(height.input)
weight
height
weight.input<-dlgInput('Input weight')$res
weight <- as.numeric(weight.input)
height.input<-dlgInput('Input height')$res
height <- as.numeric(height.input)
BMI <- weight/(height/100)^2
cat("your bmi is", BMI, sep=" ")
test<-as.numeric(dlgInput('Input weight')$res); test
test<-dlgInput('Input weight')$res; test
install.packages("xlxs")
library("xlxs")
install.packages("xlxs")
install.packages("xlxs")
install.packages("xlsx")
library(xlsx)
quakes
write.xlsx(quakes, 'data/quakes.xlsx')
a
a<-scan("testdata.txt",what="")
a
a[4]
str(a)
c
c<-read.table("testdata.txt", header=T)
c
fruit
write.xlsx(my.iris,"iris.xlsx",row.names=F)
write.xlsx(iris,"iris.xlsx",row.names=F)
clipd<-read.table(file="clipboard",
header=TRUE,
sep"\t",
stringAdFactors=FALSE)
clipd<-read.table(file="clipboard",
header=TRUE,
sep"\t",
stringAsFactors=FALSE)
clipd<-read.table(file="clipboard",
header=TRUE,
)
clipd<-read.table(file="clipboard",
header=TRUE,
sep"\t",
stringAsFactors=FALSE)
clipd<-read.table(file="clipboard",
header=T,
sep"\t",
stringAsFactors=F)
clipd<-read.table(file="clipboard",
header=T,
sep"\t",
stringsAsFactors=F)
clipd <- read.table(file="clipboard",
header=T,
sep"\t",
stringsAsFactors=F)
clipd <- read.table(file="clipboard",
header=T,
sep"\t",
stringsAsFactors=F)
clipd <- read.table(file="clipboard",
header=T,
sep"\t",
stringsAsFactors=F)
clipd <- read.table(file="clipboard",
header=T,
sep="\t",
stringsAsFactors=F)
clipd <- read.table(file="clipboard",
header=T,
sep="\t",
stringsAsFactors=F)
clipd
print('Begin work')
a<- 10; b<-20
sink('result.txt', append =T)
cat('a+b=',a+b, '\n')
sink()
cat('hello world \n')
sink('result.txt', append =T)
cat('a*b=',a*b,'\n')
sink()
sink('result.txt', append =F)
cat('a*b=',a*b,'\n')
sink()
install.packages(ggplot2)
install.packages('ggplot2')
library()
library(ggplot2)
library(ggplot2)
str(diamonds)
cut
diamonds$cut
levels(diamonds$cut)
new<-subset(diamonds, cut =="Premium" & carat >=2)
write.csv(new, test2.csv,row.names=F)
write.csv(new, 'test2.csv',row.names=F)
new<-subset(diamonds, cut =="Premium" & carat >=2)
write.csv(new, 'test2.csv',row.names=F)
diamonds2<-read.csv('test2.csv', header =T)
Not_d<-subset(diamonds2, color!='D')
write.xlsx(Not_d, 'test3.xlsx', row.names=F)
url<-"https://vincentarelbundock.github.io/Rdatasets/csv/datasets/Titanic.csv"
url<-"https://vincentarelbundock.github.io/Rdatasets/csv/datasets/Titanic.csv"
titanic<-read.csv(url)
head(titanic)
titanic<-read.csv("https://vincentarelbundock.github.io/Rdatasets/csv/datasets/Titanic.csv")
carprice.new<-read.csv('data/carprice', header=T); carprice.new
carprice.new<-read.csv('data\carprice', header=T); carprice.new
carprice.new<-read.csv('data\carprice.csv', header=T); carprice.new
source('C:/RStudy/210223_데이터입력및출력.R', encoding = 'UTF-8', echo=TRUE)
carprice.new<-read.csv('data/carprice.csv', header=T); carprice.new
str(carprice.new)
head(carprice.new)
library(svDialogs)
result<-subset(carprice.new, Type==type_input & MPG.city==MPG.city_input); result
type_input<-dlg_input('Input type')$res
MPG.city_input<-as.numeric(dlg_input('Input MPG.city')$res)
result<-subset(carprice.new, Type==type_input & MPG.city==MPG.city_input); result
type_input<-dlg_input('Input type')$res
MPG.city_input<-dlg_input('Input MPG.city')$res
result<-subset(carprice.new, Type==type_input & MPG.city==MPG.city_input); result
write.csv(result, 'result.csv', append=T)
write.csv(result, 'result.csv')
sink()
print(result)
sink('result2.xlsx', append=T)
print(result)
sink()
a<-c(3,1,5,2,7,8,10)
ifelse(a%%2==0, "even", "odd")
a<-10
b<-20
c<-ifelse(a>b, a,b)
print(c)
library(svDialogs)
amount_input<-as.numeric(dlg_input('purchase amount')$res)
if(amount_input>300000){
cat("your milege :", amount_input*0.07, sep=" ")
}
library(svDialogs)
amount_input<-as.numeric(dlg_input('purchase amount')$res)
if (amount_input>=300000){
cat("Class : ", Platinum, "\n", "Your miliege :", amount_input*0.07, sep=" ")
} else (200000=<amount_input=<300000) {
cat("Class : ", Gold, "\n", "your milege :", amount_input*0.05, sep=" ")
} else (100000=<amount_input=<200000) {
cat("Class : ", silver, "\n", "your milege :", amount_input*0.03, sep=" ")
} else (amount_input<100000) {
cat("Class : ", Friends, "\n", "your milege :", amount_input*0.01, sep=" ")
}
library(svDialogs)
amount_input<-as.numeric(dlg_input('purchase amount')$res)
if (amount_input>=300000){
cat("Class : ", Platinum, "\n", "Your miliege :", amount_input*0.07, sep=" ")
} else (200000<=amount_input<=300000) {
cat("Class : ", Gold, "\n", "your milege :", amount_input*0.05, sep=" ")
} else (100000<=amount_input<=200000) {
cat("Class : ", silver, "\n", "your milege :", amount_input*0.03, sep=" ")
} else (amount_input<100000) {
cat("Class : ", Friends, "\n", "your milege :", amount_input*0.01, sep=" ")
}
library(svDialogs)
amount_input<-as.numeric(dlg_input('purchase amount')$res)
if (amount_input>=300000){
cat("Class : Platinum", "\n", "Your miliege :", amount_input*0.07, sep=" ")
} else (200000<=amount_input<=300000) {
cat("Class : Gold", "\n", "your milege :", amount_input*0.05, sep=" ")
} else (100000<=amount_input<=200000) {
cat("Class : silver" , "\n", "your milege :", amount_input*0.03, sep=" ")
} else (amount_input<100000) {
cat("Class : Friends", "\n", "your milege :", amount_input*0.01, sep=" ")
}
for(i in 1:14){
print(i)
}
iris
nrow<-nrow(iris); nrow
norow<-nrow(iris); nrow
for (i in 1:norow) {
if (iris$Petal.Length[i]>=5.1) {
lb[i]<- 'High'
} else if(iris$Petal.Length[i]<=1.6) {
lb[i]<- 'Low')
} else {
lb[i]<- 'Medium'
}
}
lb<-c()
norow<-nrow(iris); nrow
for (i in 1:norow) {
if (iris$Petal.Length[i]>=5.1) {
lb[i]<- 'High'
} else if(iris$Petal.Length[i]<=1.6) {
lb[i]<- 'Low')
} else {
lb[i]<- 'Medium'
}
for (i in 1:norow) {
if (iris$Petal.Length[i]>=5.1) {
lb[i]<- 'High'
} else if(iris$Petal.Length[i]<=1.6) {
lb[i]<- 'Low'
} else {
lb[i]<- 'Medium'
}
print(lb)
lb<-c()
norow<-nrow(iris); norow
for (i in 1:norow) {
if (iris$Petal.Length[i]>=5.1) {
lb[i]<- 'High'
} else if(iris$Petal.Length[i]<=1.6) {
lb[i]<- 'Low'
} else {
lb[i]<- 'Medium'
}
}
print(lb)
lb
lb<-c()
norow<-nrow(iris); norow
for (i in 1:norow) {
if (iris$Petal.Length[i]>=5.1) {
lb[i]<- 'High'
} else if(iris$Petal.Length[i]<=1.6) {
lb[i]<- 'Low'
} else {
lb[i]<- 'Medium'
}
}
new<-data.frame(iris,lb)
head(new)
norow<-nrow(iris); norow
