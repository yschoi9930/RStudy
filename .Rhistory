text
text <- html_text(html_nodes(html, 'div > div > div > div'))
text
text <- html_text(html_nodes(html, 'div > div > div > div > span'))
text
text <- html_text(html_nodes(html, 'div > div > div > div > div'))
text
library(rvest)
library(stringr)
library(RJSONIO)
link_csv <- read.csv('네이버_야구_최신뉴스_수집자료.csv', colClasses='character') # colClasses 추가
library(rvest)
library(stringr)
library(RJSONIO)
url <- "https://sports.news.naver.com/kbaseball/news/list.nhn?date=20210316&isphoto=N&page=2"
news_raw<-readLines(url, encoding="UTF-8")
news_json <-fromJSON(news_raw)
length(news_json$list)
news_json$list[[2]]$oid #언론사 코드
news_json$list[[2]]$aid #기사 고유번호
news_json$list[[2]]$title #기사 제목
#---- list 키의 모든 item의 요소 가져오기
sapply(news_json$list,function(x){x$oid})
sapply(news_json$list,function(x){x$aid})
sapply(news_json$list,function(x){x$title})
#-- 2021년3월16일 야구 최신 뉴스의 전체페이지 기사 정보 가져오기
# url 분석
url <- "https://sports.news.naver.com/kbaseball/news/list.nhn?date=20210316&isphoto=N&page=3"
oid <- c()
aid <- c()
title <- c()
# url 생성
for (i in 1:100){
base_url <- 'https://sports.news.naver.com/kbaseball/news/list.nhn?date=20210316&isphoto=N&page='
url <- paste0(base_url,i)
news_raw<-readLines(url, encoding="UTF-8")
news_json <-fromJSON(news_raw)
oid <- c(oid,sapply(news_json$list,function(x){x$oid}))
aid <- c(aid,sapply(news_json$list,function(x){x$aid}))
title <- c(title,sapply(news_json$list,function(x){x$title}))
print(i)
if (i== as.numeric(news_json$totalPages)){
break
}
}
View(cbind(oid,aid,title))
#---과제 : 오늘부터 5일전까지 날짜에 대하여 데이터 수집
oid <- c()
aid <- c()
title <- c()
for (j in 0:5) {
for (i in 1:100){
base_url <- 'https://sports.news.naver.com/kbaseball/news/list.nhn?date='
base_url2 <- '&isphoto=N&page='
date <- Sys.Date()-j
date_fin <- gsub('-','',date)
url <- paste0(base_url,date_fin,base_url2,i)
# print(url)
news_raw<-readLines(url, encoding="UTF-8")
news_json <-fromJSON(news_raw)
oid <- c(oid,sapply(news_json$list,function(x){x$oid}))
aid <- c(aid,sapply(news_json$list,function(x){x$aid}))
title <- c(title,sapply(news_json$list,function(x){x$title}))
cat('\n data -',i,'수집중')
if (i== as.numeric(news_json$totalPages)){
break
}
}
}
base_ball <- data.frame(oid,aid,title)
View(base_ball)
getwd()
write.csv(base_ball,'네이버_야구_최신뉴스_수집자료.csv')
link_csv <- read.csv('네이버_야구_최신뉴스_수집자료.csv')
# oid, aid, title, contents
# 작업 후 저장하기
nrow(link_csv)
contents <-c()
for (i in 1:nrow(link_csv)){
url <- paste0('https://sports.news.naver.com/news.nhn?oid=',
link_csv$oid[i],'&aid=',link_csv$aid[i])
raw_html <- read_html(url)
raw_node <- html_nodes(raw_html,'#newsEndContents')
raw_text <- html_text(raw_node)
cnt <- raw_text %>% str_replace_all('\n|\t|<|>','') %>%
str_replace_all('[[:punct:]]','') %>%
str_trim()
contents <- c(contents,cnt)
}
View(link_csv)
link_csv <- read.csv('네이버_야구_최신뉴스_수집자료.csv', colClasses='character') # colClasses 추가
# oid, aid, title, contents
# 작업 후 저장하기
nrow(link_csv)
contents <-c()
for (i in 1:nrow(link_csv)){
url <- paste0('https://sports.news.naver.com/news.nhn?oid=',
link_csv$oid[i],'&aid=',link_csv$aid[i])
raw_html <- read_html(url)
raw_node <- html_nodes(raw_html,'#newsEndContents')
raw_text <- html_text(raw_node)
cnt <- raw_text %>% str_replace_all('\n|\t|<|>','') %>%
str_replace_all('[[:punct:]]','') %>%
str_trim()
contents <- c(contents,cnt)
}
nrow(contents)
final <- cbind(link_csv,contents)
# 네이버 지도를 이용하여 원하는 지역의 위경도 얻어오기
# url 찾기
# json 형태의 data가 전달됨
url <- 'https://map.naver.com/v5/api/instantSearch?lang=ko&caller=pcweb&types=place,address,bus&coords=37.
55517588296082,126.93685054779054&query=%EC%8B%A0%EC%B4%8C%EC%97%AD'
## 신촌역 2호선 위경도 얻어오기
coord_raw <- readLines(url, encoding = 'UTF-8')
coord_json <- fromJSON(coord_raw)
head(coord_json)
coord_json$place[[2]]$title
coord_json$place[[2]]$x
coord_json$place[[2]]$y
# ----검색어에 따른 네이버 지도 정보 추출(함수 구성)
keyword <- "신촌역"
url1 <- 'https://map.naver.com/v5/api/instantSearch?lang=ko&caller=pcweb&types=place,address,bus&coords=37.
55517588296082,126.93685054779054&query='
url <- paste0(url1, keyword)
url
# url의 키워드는 퍼센트 인코딩 처리 되어야 함
keyword <- '삼성역' # cp949
Encoding(keyword) # 엔코딩 형식을 확인하는 함수 : unknown, 에러가 남, cp949 형식은 읽지 못함
## cp949 형식을 utf형식으로 변경
keyword <- iconv(keyword,from='CP949',to='UTF-8')
Encoding(keyword) # "UTF-8" 형식 확인
URLencode(keyword) # "%EC%8B%A0%EC%B4%8C%EC%97%AD" 퍼센트엔코딩 함수 적용 완료
# --------------------------
key <- "신촌역"
key <- iconv(key,from='CP949',to='UTF-8')
Encoding(key) # "UTF-8" 형식 확인
key <- URLencode(key)
url1 <- 'https://map.naver.com/v5/api/instantSearch?lang=ko&caller=pcweb&types=place,address,bus&coords=37.
55517588296082,126.93685054779054&query='
url <- paste0(url1, key)
url
# ---------------- 함수생성
search_loc <- function(x) {
key <- iconv(x,from='CP949',to='UTF-8')
key <- URLencode(key)
url1 <- 'https://map.naver.com/v5/api/instantSearch?lang=ko&caller=pcweb&types=place,address,bus&coords=37.
55517588296082,126.93685054779054&query='
url <- paste0(url1, key)
coord_raw <- readLines(url, encoding = 'UTF-8')
coord_json <- fromJSON(coord_raw)
tit <- coord_json$place[[1]]$title
p_x <- coord_json$place[[1]]$x
p_y <- coord_json$place[[1]]$y
return(c(tit,p_x,p_y))
}
rst <- search_loc('사당역')
rst
search_loc <- function(x) {
key <- iconv(x,from='CP949',to='UTF-8')
key <- URLencode(key)
url1 <- 'https://map.naver.com/v5/api/instantSearch?lang=ko&caller=pcweb&types=place,address,bus&coords=37.
55517588296082,126.93685054779054&query='
url <- paste0(url1, key)
coord_raw <- readLines(url, encoding = 'UTF-8')
title <- c()
x_loc <- c()
y_loc <- c()
coord_json <- fromJSON(coord_raw)
for(i in 1:length(coord_json$title)){
tit <- coord_json$place[[i]]$title
p_x <- coord_json$place[[i]]$x
p_y <- coord_json$place[[i]]$y
title <- c(title,tit)
x_loc <- c(x_loc,p_x)
y_loc <- c(y_loc,p_y)
}
return(data.frame(title,x_loc,y_loc))
}
rs <- search_loc('사당역 카페')
View(rs)
url <- 'https://movie.naver.com/movie/sdb/rank/rmovie.nhn'
rank_html <- read_html(url)
rank_node <- html_node(rank_html,selector)
rank_text <- html_text(rank_node)
rank_text
rank_node
rank_html
url <- 'https://movie.naver.com/movie/sdb/rank/rmovie.nhn'
selector <-'#old_content > table > tbody > tr:nth-child(3) > td.title > div'
rank_html <- read_html(url)
rank_node <- html_node(rank_html,selector)
rank_text <- html_text(rank_node)
rank_text
rank_text <- gsub('\r|\n|\t','',rank_text)
rank_text <- gsub('\r|\n|\t','',rank_text) %>% str_trim()
rank_text
selector <-'#old_content > table > tbody > tr:nth-child(1) > td.title > div'
rank_html <- read_html(url)
rank_node <- html_node(rank_html,selector)
rank_text <- html_text(rank_node)
rank_text <- gsub('\r|\n|\t','',rank_text) %>% str_trim()
rank_text
url <- 'https://movie.naver.com/movie/sdb/rank/rmovie.nhn'
selector <-'#old_content > table > tbody > tr:nth-child(1) > td.title > div'
rank_html <- read_html(url)
rank_node <- html_node(rank_html,selector)
rank_text <- html_text(rank_node)
rank_text <- gsub('\r|\n|\t','',rank_text) %>% str_trim()
rank_text
url <- 'https://movie.naver.com/movie/sdb/rank/rmovie.nhn'
selector <-'#old_content > table > tbody > tr:nth-child(2) > td.title > div'
rank_html <- read_html(url)
rank_node <- html_node(rank_html,selector)
rank_text <- html_text(rank_node)
rank_text <- gsub('\r|\n|\t','',rank_text) %>% str_trim()
rank_text
lenght(rank_node)
length(rank_node)
selector <-'#old_content > table > tbody > tr > td.title > div'
length(rank_node)
url <- 'https://movie.naver.com/movie/sdb/rank/rmovie.nhn'
selector <-'#old_content > table > tbody > tr > td.title > div'
length(rank_node)
selector <-'#old_content > table > tbody > tr > td.title > div'
rank_html <- read_html(url)
rank_node <- html_node(rank_html,selector)
rank_text <- html_text(rank_node)
rank_text <- gsub('\r|\n|\t','',rank_text) %>% str_trim()
rank_text
length(rank_node)
rank_node <- html_nodes(rank_html,selector)
length(rank_node)
rank_node[1]
rank_node[2]
rank_node[1]
rank_node[50]
text <- c()
for (i in 1:length(rank_node)) {
rank_html <- read_html(url)
rank_node <- html_nodes(rank_html,selector)
rank_text <- html_text(html_node[i])
text <- c(text,rank_text)
}
url <- 'https://movie.naver.com/movie/sdb/rank/rmovie.nhn'
selector <-'#old_content > table > tbody > tr > td.title > div'
text <- c()
for (i in 1:length(rank_node)) {
rank_html <- read_html(url)
rank_node <- html_nodes(rank_html,selector)
rank_text <- html_text(html_node[i])
text <- c(text,rank_text)
}
rank_html <- read_html(url)
rank_node <- html_nodes(rank_html,selector)
text <- c()
for (i in 1:length(rank_node)) {
rank_text <- html_text(html_node[i])
text <- c(text,rank_text)
}
rank_text <- html_text(rank_node[i])
url <- 'https://movie.naver.com/movie/sdb/rank/rmovie.nhn'
selector <-'#old_content > table > tbody > tr > td.title > div'
rank_html <- read_html(url)
rank_node <- html_nodes(rank_html,selector)
text <- c()
for (i in 1:length(rank_node)) {
rank_text <- html_text(rank_node[i])
text <- c(text,rank_text)
}
View(text)
for (i in 1:length(rank_node)) {
rank_text <- html_text(rank_node[i])
rank_text <- gsub('\r|\n|\t','',rank_text) %>% str_trim()
text <- c(text,rank_text)
}
View(text)
title <-c()
for (i in 1:length(rank_node)){
tit <- html_text(rank_node[i]) %>%
str_replace_all('[[:punct:]]',"") %>%
str_replace_all("\\t|\\n","")
title <- c(title,tit)
}
title
url <- 'https://movie.naver.com/movie/sdb/rank/rmovie.nhn'
selector <-'#old_content > table > tbody > tr > td.title > div'
rank_html <- read_html(url)
rank_node <- html_nodes(rank_html,selector)
text <- c()
for (i in 1:length(rank_node)) {
rank_text <- html_text(rank_node[i])
rank_text <- gsub('\r|\n|\t','',rank_text) %>% str_trim()
text <- c(text,rank_text)
}
View(text)
rank_link <- html_attr(rank_node[1],'href') ;rank_link
rank_link <- html_attr(rank_node[2],'href') ;rank_link
url <- 'https://movie.naver.com/movie/sdb/rank/rmovie.nhn'
selector <-'#old_content > table > tbody > tr > td.title > div > a'
rank_html <- read_html(url)
rank_node <- html_nodes(rank_html,selector)
rank_text <- html_text(rank_node)
rank_text <- gsub('\r|\n|\t','',rank_text) %>% str_trim()
rank_text
rank_link <- html_attr(rank_node,'href') ;rank_link
url <- 'https://movie.naver.com/movie/sdb/rank/rmovie.nhn'
selector <-'#old_content > table > tbody > tr > td.title > div > a'
rank_html <- read_html(url)
rank_node <- html_nodes(rank_html,selector)
rank_text <- html_text(rank_node)
rank_text <- gsub('\r|\n|\t','',rank_text) %>% str_trim()
rank_text
length(rank_node)
rank_node[50]
rank_link <- html_attr(rank_node,'href') ;rank_link
base_url <- 'https://movie.naver.com/'
rank_link <- html_attr(rank_node,'href')
rank_link <-paste0(base,url,rank_link)
rank_link <-paste0(base,url,rank_link);rank_link
url <- 'https://movie.naver.com/movie/sdb/rank/rmovie.nhn'
selector <-'#old_content > table > tbody > tr > td.title > div > a'
base_url <- 'https://movie.naver.com/'
rank_html <- read_html(url)
rank_node <- html_nodes(rank_html,selector)
rank_text <- html_text(rank_node)
rank_text <- gsub('\r|\n|\t','',rank_text) %>% str_trim()
rank_text
length(rank_node)
rank_node[50]
rank_link <- html_attr(rank_node,'href')
rank_link <- html_attr(rank_node,'href') ; rank_link
Viw(rank_link)
View(rank_link)
rank_link <-paste0(base,url,rank_link)
rank_link
rank_link <- html_attr(rank_node,'href') ;
View(rank_link)
rank_link <-paste0(base_url,rank_link)
rank_link
rank_df <- data.frame(rank_text,rank_link)
View(rank_df)
review_url <- rank_link[1]
review_url <- rank_link[1] ; review_url
review_html <- read_html(review_url)
review_node <- html_nodes(review_html,selector)
review_text <- html_text(review_node)
review_text
review_url <- rank_link[1] ; review_url
selector -> '#content > div.article > div.section_group.section_group_frst > div:nth-child(5) >
div:nth-child(2) > div.score_area > div.netizen_score > div > div > em'
review_html <- read_html(review_url)
review_html <- read_html(review_url) ;review_html
review_node <- html_nodes(review_html,selector) ;review_node
review_node <- html_node(review_html,selector) ;review_node
selector -> '#content > div.article > div.section_group.section_group_frst >
div:nth-child(5) > div:nth-child(2) > div.score_area > div.netizen_score > div > div'
review_html <- read_html(review_url) ;review_html
review_node <- html_node(review_html,selector)
review_text <- html_text(review_node)
review_text
review_node <- html_noded(review_html,selector)
review_node <- html_nodes(review_html,selector)
review_text <- html_text(review_node)
review_text
selector -> '#content > div.article > div.section_group.section_group_frst >
div:nth-child(5) > div:nth-child(2) > div.score_area > div.netizen_score'
review_html <- read_html(review_url) ;review_html
review_node <- html_nodes(review_html,selector)
review_text <- html_text(review_node)
review_text
selector -> '#content > div.article > div.section_group.section_group_frst > div:nth-child(5)'
review_html <- read_html(review_url) ;review_html
review_node <- html_nodes(review_html,selector)
review_text <- html_text(review_node)
review_text
review_url <- rank_link[1] ; review_url
selector -> '#content > div.article > div.section_group.section_group_frst > div:nth-child(5)'
review_html <- read_html(review_url) ;review_html
review_node <- html_nodes(review_html,selector)
review_text <- html_text(review_node)
review_text
review_selector -> '#content > div.article > div.section_group.section_group_frst > div:nth-child(5)'
review_url <- rank_link[1] ; review_url
review_selector <- '#content > div.article > div.section_group.section_group_frst > div:nth-child(5)'
review_html <- read_html(review_url) ;review_html
review_node <- html_nodes(review_html,selector)
review_text <- html_text(review_node)
review_text
review_selector <- '#content > div.article > div.section_group.section_group_frst > div:nth-child(5) > div:nth-child(2) > div.score_area > div.netizen_score > div > div > em'
review_html <- read_html(review_url) ;review_html
review_node <- html_nodes(review_html,selector)
review_text <- html_text(review_node)
review_node <- html_nodes(review_html,review_selector)
review_text <- html_text(review_node)
review_text
review_selector <- '#content > div.article > div.section_group.section_group_frst > div:nth-child(5) > div:nth-child(2) > div.score_area > div.netizen_score > div > div > em'
review <-c()
for(i in 1:50) {
review_url <- rank_link[i]
review_html <- read_html(review_url)
review_node <- html_nodes(review_html,review_selector)
review_text <- html_text(review_node)
review <- c(review, review_text)
}
review
people_selector <- '#content > div.article > div.section_group.section_group_frst > div:nth-child(5) > div:nth-child(2) > div.score_area > div.netizen_score > div > div > em'
reporter_selector <-'#content > div.article > div.section_group.section_group_frst > div:nth-child(5) > div:nth-child(2) > div.score_area > div.special_score > div > div > em'
people_review <-c()
reporter_review <- c()
for(i in 1:50) {
review_url <- rank_link[i]
review_html <- read_html(review_url)
people_review_node <- html_nodes(review_html,people_selector)
people_review_text <- html_text(people_review_node)
peopel_review <- c(review, people_review_text)
reporter_review_node <-  html_nodes(review_html,repoter_selector)
reporter_review_text <- html_text(reporter_review_node)
reporter_review <- c(reporter_review, reporter_review_text)
}
people_selector <- '#content > div.article > div.section_group.section_group_frst > div:nth-child(5) > div:nth-child(2) > div.score_area > div.netizen_score > div > div > em'
reporter_selector <-'#content > div.article > div.section_group.section_group_frst > div:nth-child(5) > div:nth-child(2) > div.score_area > div.special_score > div > div > em'
people_review <-c()
reporter_review <- c()
for(i in 1:50) {
review_url <- rank_link[i]
review_html <- read_html(review_url)
people_review_node <- html_nodes(review_html,people_selector)
people_review_text <- html_text(people_review_node)
peopel_review <- c(review, people_review_text)
reporter_review_node <-  html_nodes(review_html,reporter_selector)
reporter_review_text <- html_text(reporter_review_node)
reporter_review <- c(reporter_review, reporter_review_text)
}
review_df <- data.frame(peopel_review,reporter_review)
people_review
people_review <-c()
reporter_review <- c()
for(i in 1:50) {
review_url <- rank_link[i]
review_html <- read_html(review_url)
people_review_node <- html_nodes(review_html,people_selector)
people_review_text <- html_text(people_review_node)
peopel_review <- c(review, people_review_text)
reporter_review_node <-  html_nodes(review_html,reporter_selector)
reporter_review_text <- html_text(reporter_review_node)
reporter_review <- c(reporter_review, reporter_review_text)
}
people_review
View(rank_df)
people_selector <- '#content > div.article > div.section_group.section_group_frst > div:nth-child(5) > div:nth-child(2) > div.score_area > div.netizen_score > div > div > em'
reporter_selector <-'#content > div.article > div.section_group.section_group_frst > div:nth-child(5) > div:nth-child(2) > div.score_area > div.special_score > div > div > em'
people_review <-c()
reporter_review <- c()
for(i in 1:50) {
review_url <- rank_link[i]
review_html <- read_html(review_url)
people_review_node <- html_nodes(review_html,people_selector)
people_review_text <- html_text(people_review_node)
peopel_review <- c(review, people_review_text)
reporter_review_node <-  html_nodes(review_html,reporter_selector)
reporter_review_text <- html_text(reporter_review_node)
reporter_review <- c(reporter_review, reporter_review_text)
}
people_review
people_review <-c()
reporter_review <- c()
for(i in 1:50) {
review_url <- rank_link[i]
review_html <- read_html(review_url)
people_review_node <- html_nodes(review_html,people_selector)
people_review_text <- html_text(people_review_node)
people_review <- c(review, people_review_text)
reporter_review_node <-  html_nodes(review_html,reporter_selector)
reporter_review_text <- html_text(reporter_review_node)
reporter_review <- c(reporter_review, reporter_review_text)
}
people_review
people_review <-c()
reporter_review <- c()
for(i in 1:50) {
review_url <- rank_link[i]
review_html <- read_html(review_url)
people_review_node <- html_nodes(review_html,people_selector)
people_review_text <- html_text(people_review_node)
people_review <- c(people_review, people_review_text)
reporter_review_node <-  html_nodes(review_html,reporter_selector)
reporter_review_text <- html_text(reporter_review_node)
reporter_review <- c(reporter_review, reporter_review_text)
}
people_review
length(people_review)
length(reporter_review)
review_url <- rank_link[47] ; review_url
review_html <- read_html(review_url) ;review_html
review_node <- html_nodes(review_html,people_selector)
review_text <- html_text(review_node)
review_text <- html_text(review_node) ;review_text
review_url <- rank_link[46] ; review_url
review_html <- read_html(review_url) ;review_html
review_node <- html_nodes(review_html,people_selector)
review_text <- html_text(review_node) ;review_text
review_url <- rank_link[50] ; review_url
review_html <- read_html(review_url) ;review_html
review_node <- html_nodes(review_html,people_selector)
review_text <- html_text(review_node) ;review_text
review_url <- rank_link[49] ; review_url
review_html <- read_html(review_url) ;review_html
review_node <- html_nodes(review_html,people_selector)
review_text <- html_text(review_node) ;review_text
review_df <- data.frame(people_review,reporter_review)
View(review_df)
